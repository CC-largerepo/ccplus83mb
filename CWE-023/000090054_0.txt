#include <list>

#ifdef _WIN32
#define BASEPATH "c:\\temp\\""
#else
#include <wchar.h>
#define BASEPATH "/tmp/"
#endif

#include <windows.h>

using namespace std;

namespace GenNS1
{



void func2(list<char *> dataList)
{
    char * data = dataList.back();
    {
        HANDLE hFile;
        hFile = CreateFileA(data,
                            (GENERIC_WRITE|GENERIC_READ),
                            0,
                            NULL,
                            OPEN_ALWAYS,
                            FILE_ATTRIBUTE_NORMAL,
                            NULL);
        if (hFile != INVALID_HANDLE_VALUE)
        {
            CloseHandle(hFile);
        }
    }
}

} #include <list>

#ifdef _WIN32
#define BASEPATH "c:\\temp\\""
#else
#include <wchar.h>
#define BASEPATH "/tmp/"
#endif

using namespace std;

namespace GenNS1
{



void func2(list<char *> dataList);

static void func4()
{
    char * data;
    list<char *> dataList;
    char dataBuffer[FILENAME_MAX] = BASEPATH;
    data = dataBuffer;
    strcat(data, "file.txt");
    dataList.push_back(data);
    dataList.push_back(data);
    dataList.push_back(data);
    func2(dataList);
}

void func5()
{
    func4();
}

} 



using namespace GenNS1; 

int main(int argc, char * argv[])
{
    srand( (unsigned)time(NULL) );

    printLine("Calling ...");
    func5();
    printLine("Finished");
    return 0;
}

