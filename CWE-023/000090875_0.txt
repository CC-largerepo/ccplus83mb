

#ifdef _WIN32
#define BASEPATH L"c:\\temp\\""
#else
#include <wchar.h>
#define BASEPATH L"/tmp/"
#endif

namespace GenNS1
{



class GenClass2
{
public:
    GenClass2(wchar_t * dataCopy);
    ~GenClass2();

private:
    wchar_t * data;
};

}



#include <fstream>
using namespace std;

namespace GenNS1
{
GenClass2::GenClass2(wchar_t * dataCopy)
{
    data = dataCopy;
    wcscat(data, L"file.txt");
}

GenClass2::~GenClass2()
{
    {
        ifstream inputFile;
        inputFile.open((char *)data);
        inputFile.close();
    }
}
}


namespace GenNS1
{



static void func4()
{
    wchar_t * data;
    wchar_t dataBuffer[FILENAME_MAX] = BASEPATH;
    data = dataBuffer;
    GenClass2 * var2 = new GenClass2(data);
    delete var2;
}

void func5()
{
    func4();
}

} 



using namespace GenNS1; 

int main(int argc, char * argv[])
{
    srand( (unsigned)time(NULL) );

    printLine("Calling ...");
    func5();
    printLine("Finished");
    return 0;
}

