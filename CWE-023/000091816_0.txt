#include "std_testcase.h"

#ifdef _WIN32
#define BASEPATH L"c:\\temp\\""
#else
#include <wchar.h>
#define BASEPATH L"/tmp/"
#endif

#ifdef _WIN32
#include <winsock2.h>
#include <windows.h>
#include <direct.h>
#pragma comment(lib, "ws2_32") 
#define CLOSE_SOCKET closesocket
#else
#include <sys/types.h>
#include <sys/socket.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <unistd.h>
#define INVALID_SOCKET -1
#define SOCKET_ERROR -1
#define CLOSE_SOCKET close
#define SOCKET int
#endif

#define TCP_PORT 27015
#define LISTEN_BACKLOG 5

#include <fstream>
using namespace std;

namespace var1
{

static wchar_t * var2;
static wchar_t * var3;



static void func3()
{
    wchar_t * data = var3;
    {
        ifstream inputFile;
        inputFile.open((char *)data);
        inputFile.close();
    }
}

static void func4()
{
    wchar_t * data;
    wchar_t dataBuffer[FILENAME_MAX] = BASEPATH;
    data = dataBuffer;
    wcscat(data, L"file.txt");
    var3 = data;
    func3();
}

void func5()
{
    func4();
}

} 



using namespace var1; 

int main(int argc, char * argv[])
{
    srand( (unsigned)time(NULL) );

    printLine("Calling ...");
    func5();
    printLine("Finished");
    return 0;
}

