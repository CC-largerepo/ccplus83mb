

#ifndef _WIN32
#include <wchar.h>
#endif

#include <fstream>
using namespace std;

namespace GenNS1
{



void func3(char * data);

void func1(char * data)
{
    func3(data);
}

} 

#ifndef _WIN32
#include <wchar.h>
#endif

#include <fstream>
using namespace std;

namespace GenNS1
{



void func3(char * data)
{
    {
        ifstream inputFile;
        inputFile.open((char *)data);
        inputFile.close();
    }
}

} 

#ifndef _WIN32
#include <wchar.h>
#endif

#include <fstream>
using namespace std;

namespace GenNS1
{



void func1(char * data);

void func5()
{
    char * data;
    char dataBuffer[FILENAME_MAX] = "";
    data = dataBuffer;
    {
        size_t dataLen = strlen(data);
        if (FILENAME_MAX-dataLen > 1)
        {
            if (fgets(data+dataLen, (int)(FILENAME_MAX-dataLen), stdin) != NULL)
            {
                dataLen = strlen(data);
                if (dataLen > 0 && data[dataLen-1] == '\n')
                {
                    data[dataLen-1] = '\0';
                }
            }
            else
            {
                printLine("fgets() failed");
                data[dataLen] = '\0';
            }
        }
    }
    func1(data);
}

} 



using namespace GenNS1; 

int main(int argc, char * argv[])
{
    srand( (unsigned)time(NULL) );

    printLine("Calling ...");
    func5();
    printLine("Finished");
    return 0;
}

