#include <map>

#ifndef _WIN32
#include <wchar.h>
#endif

#ifdef _WIN32
#define FOPEN _wfopen
#else
#define FOPEN fopen
#endif

using namespace std;

namespace GenNS1
{



void func2(map<int, wchar_t *> dataMap)
{
    wchar_t * data = dataMap[2];
    {
        FILE *pFile = NULL;
        pFile = FOPEN(data, L"wb+");
        if (pFile != NULL)
        {
            fclose(pFile);
        }
    }
}

} #include <map>

#ifndef _WIN32
#include <wchar.h>
#endif

using namespace std;

namespace GenNS1
{



void func2(map<int, wchar_t *> dataMap);

static void func4()
{
    wchar_t * data;
    map<int, wchar_t *> dataMap;
    wchar_t dataBuffer[FILENAME_MAX] = L"";
    data = dataBuffer;
#ifdef _WIN32
    wcscat(data, L"c:\\temp\\file.txt");
#else
    wcscat(data, L"/tmp/file.txt");
#endif
    dataMap[0] = data;
    dataMap[1] = data;
    dataMap[2] = data;
    func2(dataMap);
}

void func5()
{
    func4();
}

} 



using namespace GenNS1; 

int main(int argc, char * argv[])
{
    srand( (unsigned)time(NULL) );

    printLine("Calling ...");
    func5();
    printLine("Finished");
    return 0;
}

