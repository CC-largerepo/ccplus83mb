

#ifndef _WIN32
#include <wchar.h>
#endif

namespace GenNS1
{

class GenClass1
{
public:
    virtual void action(wchar_t * data) const = 0;
};



class GenClass3 : public GenClass1
{
public:
    void action(wchar_t * data) const;
};

}



#ifdef _WIN32
#define OPEN _wopen
#define CLOSE _close
#else
#include <unistd.h>
#define OPEN open
#define CLOSE close
#endif

namespace GenNS1
{

void GenClass3::action(wchar_t * data) const
{
    {
        int fileDesc;
        fileDesc = OPEN(data, O_RDWR|O_CREAT, S_IREAD|S_IWRITE);
        if (fileDesc != -1)
        {
            CLOSE(fileDesc);
        }
    }
}

}


#define ENV_VARIABLE L"ADD"

#ifdef _WIN32
#define GETENV _wgetenv
#else
#define GETENV getenv
#endif

namespace GenNS1
{



static void func2()
{
    wchar_t * data;
    wchar_t dataBuffer[FILENAME_MAX] = L"";
    data = dataBuffer;
#ifdef _WIN32
    wcscat(data, L"c:\\temp\\file.txt");
#else
    wcscat(data, L"/tmp/file.txt");
#endif
    const GenClass1& baseObject = GenClass3();
    baseObject.action(data);
}

void func3()
{
    func2();
}

} 



using namespace GenNS1; 

int main(int argc, char * argv[])
{
    srand( (unsigned)time(NULL) );

    printLine("Calling ...");
    func3();
    printLine("Finished");
    return 0;
}

