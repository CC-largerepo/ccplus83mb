

#include <wchar.h>

#ifdef _WIN32
#define FULL_COMMAND L"%WINDIR%\\system32\\cmd.exe /c dir "
#else
#include <unistd.h>
#define FULL_COMMAND L"/bin/sh ls -la "
#endif

namespace GenNS1
{



class GenClass2
{
public:
    GenClass2(wchar_t * dataCopy);
    ~GenClass2();

private:
    wchar_t * data;
};

}



#ifdef _WIN32
#define SYSTEM _wsystem
#else 
#define SYSTEM system
#endif

namespace GenNS1
{
GenClass2::GenClass2(wchar_t * dataCopy)
{
    data = dataCopy;
    wcscat(data, L"*.*");
}

GenClass2::~GenClass2()
{
    if (SYSTEM(data) <= 0)
    {
        printLine("command execution failed!");
        exit(1);
    }
}
}


namespace GenNS1
{



static void func4()
{
    wchar_t * data;
    wchar_t data_buf[100] = FULL_COMMAND;
    data = data_buf;
    GenClass2 * var2 =  new GenClass2(data);
    delete var2;
}

void func5()
{
    func4();
}

} 



using namespace GenNS1; 

int main(int argc, char * argv[])
{
    srand( (unsigned)time(NULL) );

    printLine("Calling ...");
    func5();
    printLine("Finished");
    return 0;
}

