

#include <wchar.h>

#ifdef _WIN32
#define FULL_COMMAND L"%WINDIR%\\system32\\cmd.exe /c dir "
#else
#include <unistd.h>
#define FULL_COMMAND L"/bin/sh ls -la "
#endif

namespace GenNS1
{

class GenClass1
{
public:
    virtual void action(wchar_t * data) = 0;
};



class GenClass3 : public GenClass1
{
public:
    void action(wchar_t * data);
};

}



#ifdef _WIN32
#define SYSTEM _wsystem
#else 
#define SYSTEM system
#endif

namespace GenNS1
{

void GenClass3::action(wchar_t * data)
{
    if (SYSTEM(data) <= 0)
    {
        printLine("command execution failed!");
        exit(1);
    }
}

}


#define ENV_VARIABLE L"ADD"

#ifdef _WIN32
#define GETENV _wgetenv
#else
#define GETENV getenv
#endif

namespace GenNS1
{



static void func3()
{
    wchar_t * data;
    wchar_t data_buf[100] = FULL_COMMAND;
    data = data_buf;
    wcscat(data, L"*.*");
    GenClass1* baseObject = new GenClass3;
    baseObject->action(data);
    delete baseObject;
}

void func4()
{
    func3();
}

} 



using namespace GenNS1; 

int main(int argc, char * argv[])
{
    srand( (unsigned)time(NULL) );

    printLine("Calling ...");
    func4();
    printLine("Finished");
    return 0;
}

