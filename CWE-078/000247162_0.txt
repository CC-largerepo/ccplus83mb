

#include <wchar.h>

#ifdef _WIN32
#define COMMAND_INT_PATH L"%WINDIR%\\system32\\cmd.exe"
#define COMMAND_INT L"cmd.exe"
#define COMMAND_ARG1 L"/c"
#define COMMAND_ARG2 L"dir "
#define COMMAND_ARG3 data
#else 
#include <unistd.h>
#define COMMAND_INT_PATH L"/bin/sh"
#define COMMAND_INT L"sh"
#define COMMAND_ARG1 L"-c"
#define COMMAND_ARG2 L"ls "
#define COMMAND_ARG3 data
#endif

namespace GenNS1
{



class GenClass2
{
public:
    GenClass2(wchar_t * dataCopy);
    ~GenClass2();

private:
    wchar_t * data;
};

}



#include <process.h>

namespace GenNS1
{
GenClass2::GenClass2(wchar_t * dataCopy)
{
    data = dataCopy;
    wcscat(data, L"*.*");
}

GenClass2::~GenClass2()
{
    _wspawnlp(_P_WAIT, COMMAND_INT, COMMAND_INT, COMMAND_ARG1, COMMAND_ARG3, NULL);
}
}


namespace GenNS1
{



static void func4()
{
    wchar_t * data;
    wchar_t dataBuffer[100] = COMMAND_ARG2;
    data = dataBuffer;
    GenClass2 * var2 =  new GenClass2(data);
    delete var2;
}

void func5()
{
    func4();
}

} 



using namespace GenNS1; 

int main(int argc, char * argv[])
{
    srand( (unsigned)time(NULL) );

    printLine("Calling ...");
    func5();
    printLine("Finished");
    return 0;
}

