#include "std_testcase.h"



static int var2 = 0;
static int var3 = 0;
static int var4 = 0;

static void func3(int data)
{
    if(var2)
    {
        printLine("Benign, fixed string");
    }
    else
    {
        {
            int i;
            int buffer[10] = { 0 };
            if (data >= 0 && data < (10))
            {
                buffer[data] = 1;
                for(i = 0; i < 10; i++)
                {
                    printIntLine(buffer[i]);
                }
            }
            else
            {
                printLine("ERROR: Array index is out-of-bounds");
            }
        }
    }
}

static void func4()
{
    int data;
    data = -1;
    data = 10;
    var2 = 0; 
    func3(data);
}

static void func5(int data)
{
    if(var3)
    {
        {
            int i;
            int buffer[10] = { 0 };
            if (data >= 0 && data < (10))
            {
                buffer[data] = 1;
                for(i = 0; i < 10; i++)
                {
                    printIntLine(buffer[i]);
                }
            }
            else
            {
                printLine("ERROR: Array index is out-of-bounds");
            }
        }
    }
}

static void func6()
{
    int data;
    data = -1;
    data = 10;
    var3 = 1; 
    func5(data);
}

static void func7(int data)
{
    if(var4)
    {
        {
            int i;
            int buffer[10] = { 0 };
            if (data >= 0)
            {
                buffer[data] = 1;
                for(i = 0; i < 10; i++)
                {
                    printIntLine(buffer[i]);
                }
            }
            else
            {
                printLine("ERROR: Array index is negative.");
            }
        }
    }
}

static void func8()
{
    int data;
    data = -1;
    data = 7;
    var4 = 1; 
    func7(data);
}

void func9()
{
    func4();
    func6();
    func8();
}



int main(int argc, char * argv[])
{
    srand( (unsigned)time(NULL) );

    printLine("Calling ...");
    func9();
    printLine("Finished");
    return 0;
}

