

namespace GenNS1
{

class GenClass1
{
public:
    virtual void action(int data) const = 0;
};



class GenClass2 : public GenClass1
{
public:
    void action(int data) const;
};

}



namespace GenNS1
{

void GenClass2::action(int data) const
{
    {
        int i;
        int buffer[10] = { 0 };
        if (data >= 0)
        {
            buffer[data] = 1;
            for(i = 0; i < 10; i++)
            {
                printIntLine(buffer[i]);
            }
        }
        else
        {
            printLine("ERROR: Array index is negative.");
        }
    }
}

}


namespace GenNS1
{



void func1()
{
    int data;
    data = -1;
    data = 10;
    const GenClass1& baseObject = GenClass2();
    baseObject.action(data);
}

} 



using namespace GenNS1; 

int main(int argc, char * argv[])
{
    srand( (unsigned)time(NULL) );

    printLine("Calling ...");
    func1();
    printLine("Finished");
    return 0;
}

