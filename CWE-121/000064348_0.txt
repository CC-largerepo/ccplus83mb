#include <list>

using namespace std;

namespace GenNS1
{



void func2(list<int64_t *> dataList)
{
    int64_t * data = dataList.back();
    {
        int64_t source[100] = {0}; 
        {
            size_t i;
            for (i = 0; i < 100; i++)
            {
                data[i] = source[i];
            }
            printLongLongLine(data[0]);
        }
    }
}

} #include <list>

using namespace std;

namespace GenNS1
{



void func2(list<int64_t *> dataList);

static void func4()
{
    int64_t * data;
    list<int64_t *> dataList;
    int64_t * var1 = (int64_t *)ALLOCA(50*sizeof(int64_t));
    int64_t * var2 = (int64_t *)ALLOCA(100*sizeof(int64_t));
    data = var2;
    dataList.push_back(data);
    dataList.push_back(data);
    dataList.push_back(data);
    func2(dataList);
}

void func5()
{
    func4();
}

} 



using namespace GenNS1; 

int main(int argc, char * argv[])
{
    srand( (unsigned)time(NULL) );

    printLine("Calling ...");
    func5();
    printLine("Finished");
    return 0;
}

