

namespace GenNS1
{

class GenClass1
{
public:
    virtual void action(int64_t * data) const = 0;
};



class GenClass3 : public GenClass1
{
public:
    void action(int64_t * data) const;
};

}



namespace GenNS1
{

void GenClass3::action(int64_t * data) const
{
    {
        int64_t source[100] = {0}; 
        {
            size_t i;
            for (i = 0; i < 100; i++)
            {
                data[i] = source[i];
            }
            printLongLongLine(data[0]);
        }
    }
}

}


namespace GenNS1
{



static void func2()
{
    int64_t * data;
    int64_t var1[50];
    int64_t var2[100];
    data = var2;
    const GenClass1& baseObject = GenClass3();
    baseObject.action(data);
}

void func3()
{
    func2();
}

} 



using namespace GenNS1; 

int main(int argc, char * argv[])
{
    srand( (unsigned)time(NULL) );

    printLine("Calling ...");
    func3();
    printLine("Finished");
    return 0;
}

