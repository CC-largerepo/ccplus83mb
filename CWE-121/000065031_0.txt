

namespace GenNS1
{

class GenClass1
{
public:
    virtual void action(twoIntsStruct * data) = 0;
};



class GenClass3 : public GenClass1
{
public:
    void action(twoIntsStruct * data);
};

}



namespace GenNS1
{

void GenClass3::action(twoIntsStruct * data)
{
    {
        twoIntsStruct source[100];
        {
            size_t i;
            for (i = 0; i < 100; i++)
            {
                source[i].intOne = 0;
                source[i].intOne = 0;
            }
        }
        memmove(data, source, 100*sizeof(twoIntsStruct));
        printStructLine(&data[0]);
    }
}

}


namespace GenNS1
{



static void func3()
{
    twoIntsStruct * data;
    twoIntsStruct var1[50];
    twoIntsStruct var2[100];
    data = var2;
    GenClass1* baseObject = new GenClass3;
    baseObject->action(data);
    delete baseObject;
}

void func4()
{
    func3();
}

} 



using namespace GenNS1; 

int main(int argc, char * argv[])
{
    srand( (unsigned)time(NULL) );

    printLine("Calling ...");
    func4();
    printLine("Finished");
    return 0;
}

