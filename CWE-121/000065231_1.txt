

#include <wchar.h>

namespace GenNS1
{

class GenClass1
{
public:
    virtual void action(wchar_t * data) = 0;
};



class GenClass2 : public GenClass1
{
public:
    void action(wchar_t * data);
};

}



namespace GenNS1
{

void GenClass2::action(wchar_t * data)
{
    {
        wchar_t source[100];
        wmemset(source, L'C', 100-1); 
        source[100-1] = L'\0'; 
        wcsncpy(data, source, 100-1);
        data[100-1] = L'\0'; 
        printWLine(data);
    }
}

}


namespace GenNS1
{



void func2()
{
    wchar_t * data;
    wchar_t * var1 = (wchar_t *)ALLOCA(50*sizeof(wchar_t));
    wchar_t * var2 = (wchar_t *)ALLOCA(100*sizeof(wchar_t));
    data = var1;
    data[0] = L'\0'; 
    GenClass1* baseObject = new GenClass2;
    baseObject->action(data);
    delete baseObject;
}

} 



using namespace GenNS1; 

int main(int argc, char * argv[])
{
    srand( (unsigned)time(NULL) );

    printLine("Calling ...");
    func2();
    printLine("Finished");
    return 0;
}

