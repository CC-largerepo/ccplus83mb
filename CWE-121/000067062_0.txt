

namespace GenNS1
{

class GenClass1
{
public:
    virtual void action(char * data) const = 0;
};



class GenClass3 : public GenClass1
{
public:
    void action(char * data) const;
};

class GenClass4 : public GenClass1
{
public:
    void action(char * data) const;
};

}



namespace GenNS1
{

void GenClass4::action(char * data) const
{
    {
        OneIntClass * classOne = new(data) OneIntClass;
        classOne->intOne = 5;
        printIntLine(classOne->intOne);
    }
}

}




namespace GenNS1
{

void GenClass3::action(char * data) const
{
    {
        TwoIntsClass * classTwo = new(data) TwoIntsClass;
        classTwo->intOne = 5;
        classTwo->intTwo = 10; 
        printIntLine(classTwo->intOne);
        }
}

}


namespace GenNS1
{



static void func2()
{
    char * data;
    char var1[sizeof(OneIntClass)];
    char var2[sizeof(TwoIntsClass)];
    data = var2;
    const GenClass1& baseObject = GenClass3();
    baseObject.action(data);
}

static void func3()
{
    char * data;
    char var1[sizeof(OneIntClass)];
    char var2[sizeof(TwoIntsClass)];
    data = var1;
    const GenClass1& baseObject = GenClass4();
    baseObject.action(data);
}

void func4()
{
    func2();
    func3();
}

} 



using namespace GenNS1; 

int main(int argc, char * argv[])
{
    srand( (unsigned)time(NULL) );

    printLine("Calling ...");
    func4();
    printLine("Finished");
    return 0;
}

