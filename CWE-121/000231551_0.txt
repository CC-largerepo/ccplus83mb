

typedef struct var1
{
    twoIntsStruct * structFirst;
} var2;



void func2(var2 myStruct)
{
    twoIntsStruct * data = myStruct.structFirst;
    {
        twoIntsStruct source[100];
        {
            size_t i;
            for (i = 0; i < 100; i++)
            {
                source[i].intOne = 0;
                source[i].intTwo = 0;
            }
        }
        memcpy(data, source, 100*sizeof(twoIntsStruct));
        printStructLine(&data[0]);
    }
}



typedef struct var1
{
    twoIntsStruct * structFirst;
} var2;



void func2(var2 myStruct);

static void func4()
{
    twoIntsStruct * data;
    var2 myStruct;
    twoIntsStruct * var3 = (twoIntsStruct *)ALLOCA(50*sizeof(twoIntsStruct));
    twoIntsStruct * var4 = (twoIntsStruct *)ALLOCA(100*sizeof(twoIntsStruct));
    data = var4;
    myStruct.structFirst = data;
    func2(myStruct);
}

void func5()
{
    func4();
}



int main(int argc, char * argv[])
{
    srand( (unsigned)time(NULL) );

    printLine("Calling ...");
    func5();
    printLine("Finished");
    return 0;
}

