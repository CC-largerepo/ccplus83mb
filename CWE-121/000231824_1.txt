#include <map>

#include <wchar.h>

#ifdef _WIN32
#define SNPRINTF _snwprintf
#else
#define SNPRINTF swprintf
#endif

using namespace std;

namespace GenNS1
{



void func1(map<int, wchar_t *> dataMap)
{
    wchar_t * data = dataMap[2];
    {
        wchar_t dest[50] = L"";
        SNPRINTF(dest, wcslen(data), L"%s", data);
        printWLine(data);
    }
}

} #include <map>

#include <wchar.h>

using namespace std;

namespace GenNS1
{



void func1(map<int, wchar_t *> dataMap);

void func3()
{
    wchar_t * data;
    map<int, wchar_t *> dataMap;
    wchar_t * dataBuffer = (wchar_t *)ALLOCA(100*sizeof(wchar_t));
    data = dataBuffer;
    wmemset(data, L'A', 100-1); 
    data[100-1] = L'\0'; 
    dataMap[0] = data;
    dataMap[1] = data;
    dataMap[2] = data;
    func1(dataMap);
}

} 



using namespace GenNS1; 

int main(int argc, char * argv[])
{
    srand( (unsigned)time(NULL) );

    printLine("Calling ...");
    func3();
    printLine("Finished");
    return 0;
}

