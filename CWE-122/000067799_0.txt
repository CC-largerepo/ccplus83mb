

namespace GenNS1
{

typedef struct _structType
{
    int structFirst;
} structType;



void func2(structType myStruct)
{
    int data = myStruct.structFirst;
    {
        int i;
        int * buffer = new int[10];
        for (i = 0; i < 10; i++)
        {
            buffer[i] = 0;
        }
        if (data >= 0)
        {
            buffer[data] = 1;
            for(i = 0; i < 10; i++)
            {
                printIntLine(buffer[i]);
            }
        }
        else
        {
            printLine("ERROR: Array index is negative.");
        }
        delete[] buffer;
    }
}

void func3(structType myStruct)
{
    int data = myStruct.structFirst;
    {
        int i;
        int * buffer = new int[10];
        for (i = 0; i < 10; i++)
        {
            buffer[i] = 0;
        }
        if (data >= 0 && data < (10))
        {
            buffer[data] = 1;
            for(i = 0; i < 10; i++)
            {
                printIntLine(buffer[i]);
            }
        }
        else
        {
            printLine("ERROR: Array index is out-of-bounds");
        }
        delete[] buffer;
    }
}

} 

namespace GenNS1
{

typedef struct _structType
{
    int structFirst;
} structType;



void func2(structType myStruct);

static void func5()
{
    int data;
    structType myStruct;
    data = -1;
    data = 7;
    myStruct.structFirst = data;
    func2(myStruct);
}

void func3(structType myStruct);

static void func6()
{
    int data;
    structType myStruct;
    data = -1;
    data = RAND32();
    myStruct.structFirst = data;
    func3(myStruct);
}

void func7()
{
    func5();
    func6();
}

} 



using namespace GenNS1; 

int main(int argc, char * argv[])
{
    srand( (unsigned)time(NULL) );

    printLine("Calling ...");
    func7();
    printLine("Finished");
    return 0;
}

