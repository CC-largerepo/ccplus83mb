

namespace GenNS1
{



class GenClass2
{
public:
    GenClass2(TwoIntsClass * dataCopy);
    ~GenClass2();

private:
    TwoIntsClass * data;
};

}



namespace GenNS1
{
GenClass2::GenClass2(TwoIntsClass * dataCopy)
{
    data = dataCopy;
    data = new TwoIntsClass[100];
}

GenClass2::~GenClass2()
{
    {
        TwoIntsClass source[100];
        {
            size_t i;
            for (i = 0; i < 100; i++)
            {
                source[i].intOne = 0;
                source[i].intTwo = 0;
            }
        }
        {
            size_t i;
            for (i = 0; i < 100; i++)
            {
                data[i] = source[i];
            }
            printIntLine(data[0].intOne);
            delete [] data;
        }
    }
}
}


namespace GenNS1
{



static void func4()
{
    TwoIntsClass * data;
    data = NULL;
    GenClass2 * var2 = new GenClass2(data);
    delete var2;
}

void func5()
{
    func4();
}

} 



using namespace GenNS1; 

int main(int argc, char * argv[])
{
    srand( (unsigned)time(NULL) );

    printLine("Calling ...");
    func5();
    printLine("Finished");
    return 0;
}

