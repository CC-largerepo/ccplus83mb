

namespace GenNS1
{



class GenClass2
{
public:
    GenClass2(int * dataCopy);
    ~GenClass2();

private:
    int * data;
};

}



namespace GenNS1
{
GenClass2::GenClass2(int * dataCopy)
{
    data = dataCopy;
    data = (int *)malloc(10*sizeof(int));
}

GenClass2::~GenClass2()
{
    {
        int source[10] = {0};
        size_t i;
        for (i = 0; i < 10; i++)
        {
            data[i] = source[i];
        }
        printIntLine(data[0]);
        free(data);
    }
}
}


namespace GenNS1
{



static void func4()
{
    int * data;
    data = NULL;
    GenClass2 * var2 =  new GenClass2(data);
    delete var2;
}

void func5()
{
    func4();
}

} 



using namespace GenNS1; 

int main(int argc, char * argv[])
{
    srand( (unsigned)time(NULL) );

    printLine("Calling ...");
    func5();
    printLine("Finished");
    return 0;
}

