

#include <wchar.h>

namespace GenNS1
{



class GenClass2
{
public:
    GenClass2(void * dataCopy);
    ~GenClass2();

private:
    void * data;
};

class GenClass3
{
public:
    GenClass3(void * dataCopy);
    ~GenClass3();

private:
    void * data;
};

}



namespace GenNS1
{
GenClass3::GenClass3(void * dataCopy)
{
    data = dataCopy;
    {
        wchar_t * var1 = (wchar_t *)malloc(50*sizeof(wchar_t));
        wmemset(var1, L'A', 50-1);
        var1[50-1] = L'\0';
        data = (void *)var1;
    }
}

GenClass3::~GenClass3()
{
    {
        size_t dataLen = wcslen((wchar_t *)data);
        void * dest = (void *)calloc(dataLen+1, sizeof(wchar_t));
        memcpy(dest, data, (dataLen+1)*sizeof(wchar_t));
        printWLine((wchar_t *)dest);
        free(dest);
    }
}
}




namespace GenNS1
{
GenClass2::GenClass2(void * dataCopy)
{
    data = dataCopy;
    {
        char * var2 = (char *)malloc(50*sizeof(char));
        memset(var2, 'A', 50-1);
        var2[50-1] = '\0';
        data = (void *)var2;
    }
}

GenClass2::~GenClass2()
{
    {
        size_t dataLen = strlen((char *)data);
        void * dest = (void *)calloc(dataLen+1, 1);
        memcpy(dest, data, (dataLen+1));
        printLine((char *)dest);
        free(dest);
    }
}
}


namespace GenNS1
{



static void func5()
{
    void * data;
    data = NULL;
    GenClass2 var4(data);
}

static void func6()
{
    void * data;
    data = NULL;
    GenClass3 var5(data);
}

void func7()
{
    func5();
    func6();
}

} 



using namespace GenNS1; 

int main(int argc, char * argv[])
{
    srand( (unsigned)time(NULL) );

    printLine("Calling ...");
    func7();
    printLine("Finished");
    return 0;
}

