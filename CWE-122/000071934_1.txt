

namespace GenNS1
{



class GenClass1
{
public:
    GenClass1(twoIntsStruct * dataCopy);
    ~GenClass1();

private:
    twoIntsStruct * data;
};

}



namespace GenNS1
{
GenClass1::GenClass1(twoIntsStruct * dataCopy)
{
    data = dataCopy;
    data = (twoIntsStruct *)malloc(50*sizeof(twoIntsStruct));
}

GenClass1::~GenClass1()
{
    {
        twoIntsStruct source[100];
        {
            size_t i;
            for (i = 0; i < 100; i++)
            {
                source[i].intOne = 0;
                source[i].intTwo = 0;
            }
        }
        memmove(data, source, 100*sizeof(twoIntsStruct));
        printStructLine(&data[0]);
        free(data);
    }
}
}


namespace GenNS1
{



void func3()
{
    twoIntsStruct * data;
    data = NULL;
    GenClass1 var1(data);
}

} 



using namespace GenNS1; 

int main(int argc, char * argv[])
{
    srand( (unsigned)time(NULL) );

    printLine("Calling ...");
    func3();
    printLine("Finished");
    return 0;
}

