

namespace GenNS1
{



extern int var2;
extern int var3;
extern int var4;

void func2(char * data)
{
    if(var2)
    {
        printLine("Benign, fixed string");
    }
    else
    {
        {
            OneIntClass * classOne = new(data) OneIntClass;
            classOne->intOne = 5;
            printIntLine(classOne->intOne);
            free(data);
        }
    }
}

void func3(char * data)
{
    if(var3)
    {
        {
            OneIntClass * classOne = new(data) OneIntClass;
            classOne->intOne = 5;
            printIntLine(classOne->intOne);
            free(data);
        }
    }
}

void func4(char * data)
{
    if(var4)
    {
        {
            TwoIntsClass * classTwo = new(data) TwoIntsClass;
            classTwo->intOne = 5;
            classTwo->intTwo = 10; 
            printIntLine(classTwo->intOne);
            free(data);
        }
    }
}

} 

namespace GenNS1
{



int var2 = 0;
int var3 = 0;
int var4 = 0;

void func2(char * data);

static void func6()
{
    char * data;
    char * var5 = (char *)malloc(sizeof(OneIntClass));
    char * var6 = (char *)malloc(sizeof(TwoIntsClass));
    data = var5;
    var2 = 0; 
    func2(data);
}

void func3(char * data);

static void func7()
{
    char * data;
    char * var5 = (char *)malloc(sizeof(OneIntClass));
    char * var6 = (char *)malloc(sizeof(TwoIntsClass));
    data = var5;
    var3 = 1; 
    func3(data);
}

void func4(char * data);

static void func8()
{
    char * data;
    char * var5 = (char *)malloc(sizeof(OneIntClass));
    char * var6 = (char *)malloc(sizeof(TwoIntsClass));
    data = var6;
    var4 = 1; 
    func4(data);
}

void func9()
{
    func6();
    func7();
    func8();
}

} 



using namespace GenNS1; 

int main(int argc, char * argv[])
{
    srand( (unsigned)time(NULL) );

    printLine("Calling ...");
    func9();
    printLine("Finished");
    return 0;
}

