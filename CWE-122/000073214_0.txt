

namespace GenNS1
{



void func5(char * data);

void func2(char * data)
{
    func5(data);
}

void func6(char * data);

void func3(char * data)
{
    func6(data);
}

} 

namespace GenNS1
{



void func8(char * data);

void func5(char * data)
{
    func8(data);
}

void func9(char * data);

void func6(char * data)
{
    func9(data);
}

} 

namespace GenNS1
{



void func11(char * data);

void func8(char * data)
{
    func11(data);
}

void func12(char * data);

void func9(char * data)
{
    func12(data);
}

} 

namespace GenNS1
{



void func11(char * data)
{
    {
        TwoIntsClass * classTwo = new(data) TwoIntsClass;
        classTwo->intOne = 5;
        classTwo->intTwo = 10; 
        printIntLine(classTwo->intOne);
        free(data);
    }
}

void func12(char * data)
{
    {
        OneIntClass * classOne = new(data) OneIntClass;
        classOne->intOne = 5;
        printIntLine(classOne->intOne);
        free(data);
    }
}

} 

namespace GenNS1
{



void func2(char * data);

static void func14()
{
    char * data;
    char * var1 = (char *)malloc(sizeof(OneIntClass));
    char * var2 = (char *)malloc(sizeof(TwoIntsClass));
    data = var2;
    func2(data);
}

void func3(char * data);

static void func15()
{
    char * data;
    char * var1 = (char *)malloc(sizeof(OneIntClass));
    char * var2 = (char *)malloc(sizeof(TwoIntsClass));
    data = var1;
    func3(data);
}

void func16()
{
    func14();
    func15();
}

} 



using namespace GenNS1; 

int main(int argc, char * argv[])
{
    srand( (unsigned)time(NULL) );

    printLine("Calling ...");
    func16();
    printLine("Finished");
    return 0;
}

