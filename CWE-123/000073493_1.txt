

typedef struct _linkedList
{
    struct _linkedList *next;
    struct _linkedList *prev;
} linkedList;

typedef struct var1
{
    linkedList list;
} var2;

static linkedList *linkedListPrev, *linkedListNext;

typedef struct var3
{
    var2 structFirst;
} var4;



void func1(var4 myStruct)
{
    var2 data = myStruct.structFirst;
    linkedListPrev = data.list.prev;
    linkedListNext = data.list.next;
    linkedListPrev->next = linkedListNext;
    linkedListNext->prev = linkedListPrev;
}



typedef struct _linkedList
{
    struct _linkedList *next;
    struct _linkedList *prev;
} linkedList;

typedef struct var1
{
    linkedList list;
} var2;

static linkedList *linkedListPrev, *linkedListNext;

typedef struct var3
{
    var2 structFirst;
} var4;



void func1(var4 myStruct);

void func3()
{
    var2 data;
    var4 myStruct;
    linkedList head = { &head, &head };
    data.list.next = head.next;
    data.list.prev = head.prev;
    head.next = &data.list;
    head.prev = &data.list;
    if (fgets((char*)&data, sizeof(data), stdin) == NULL)
    {
        printLine("fgets failed!");
        exit(1);
    }
    myStruct.structFirst = data;
    func1(myStruct);
}



int main(int argc, char * argv[])
{
    srand( (unsigned)time(NULL) );

    printLine("Calling ...");
    func3();
    printLine("Finished");
    return 0;
}

