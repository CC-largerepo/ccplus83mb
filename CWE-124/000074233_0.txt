#include <map>

using namespace std;

namespace GenNS1
{



void func2(map<int, int> dataMap)
{
    int data = dataMap[2];
    {
        int i;
        int buffer[10] = { 0 };
        if (data < 10)
        {
            buffer[data] = 1;
            for(i = 0; i < 10; i++)
            {
                printIntLine(buffer[i]);
            }
        }
        else
        {
            printLine("ERROR: Array index is negative.");
        }
    }
}

void func3(map<int, int> dataMap)
{
    int data = dataMap[2];
    {
        int i;
        int buffer[10] = { 0 };
        if (data >= 0 && data < (10))
        {
            buffer[data] = 1;
            for(i = 0; i < 10; i++)
            {
                printIntLine(buffer[i]);
            }
        }
        else
        {
            printLine("ERROR: Array index is out-of-bounds");
        }
    }
}

} #include <map>

using namespace std;

namespace GenNS1
{



void func2(map<int, int> dataMap);

static void func5()
{
    int data;
    map<int, int> dataMap;
    data = -1;
    data = 7;
    dataMap[0] = data;
    dataMap[1] = data;
    dataMap[2] = data;
    func2(dataMap);
}

void func3(map<int, int> dataMap);

static void func6()
{
    int data;
    map<int, int> dataMap;
    data = -1;
    data = RAND32();
    dataMap[0] = data;
    dataMap[1] = data;
    dataMap[2] = data;
    func3(dataMap);
}

void func7()
{
    func5();
    func6();
}

} 



using namespace GenNS1; 

int main(int argc, char * argv[])
{
    srand( (unsigned)time(NULL) );

    printLine("Calling ...");
    func7();
    printLine("Finished");
    return 0;
}

