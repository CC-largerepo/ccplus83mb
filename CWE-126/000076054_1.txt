

#include <wchar.h>

namespace GenNS1
{

class GenClass1
{
public:
    virtual void action(char * data) const = 0;
};



class GenClass2 : public GenClass1
{
public:
    void action(char * data) const;
};

}



namespace GenNS1
{

void GenClass2::action(char * data) const
{
    {
        char dest[100];
        memset(dest, 'C', 100-1);
        dest[100-1] = '\0'; 
        memcpy(dest, data, strlen(dest)*sizeof(char));
        dest[100-1] = '\0';
        printLine(dest);
    }
}

}


namespace GenNS1
{



void func1()
{
    char * data;
    char * var1 = (char *)ALLOCA(50*sizeof(char));
    char * var2 = (char *)ALLOCA(100*sizeof(char));
    memset(var1, 'A', 50-1); 
    var1[50-1] = '\0'; 
    memset(var2, 'A', 100-1); 
    var2[100-1] = '\0'; 
    data = var1;
    const GenClass1& baseObject = GenClass2();
    baseObject.action(data);
}

} 



using namespace GenNS1; 

int main(int argc, char * argv[])
{
    srand( (unsigned)time(NULL) );

    printLine("Calling ...");
    func1();
    printLine("Finished");
    return 0;
}

