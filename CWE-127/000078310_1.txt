

#include <wchar.h>

namespace GenNS1
{

class GenClass1
{
public:
    virtual void action(char * data) const = 0;
};



class GenClass2 : public GenClass1
{
public:
    void action(char * data) const;
};

}



namespace GenNS1
{

void GenClass2::action(char * data) const
{
    {
        size_t i;
        char dest[100];
        memset(dest, 'C', 100-1); 
        dest[100-1] = '\0'; 
        for (i = 0; i < 100; i++)
        {
            dest[i] = data[i];
        }
        dest[100-1] = '\0';
        printLine(dest);
        }
}

}


namespace GenNS1
{



void func1()
{
    char * data;
    data = NULL;
    {
        char * dataBuffer = new char[100];
        memset(dataBuffer, 'A', 100-1);
        dataBuffer[100-1] = '\0';
        data = dataBuffer - 8;
    }
    const GenClass1& baseObject = GenClass2();
    baseObject.action(data);
}

} 



using namespace GenNS1; 

int main(int argc, char * argv[])
{
    srand( (unsigned)time(NULL) );

    printLine("Calling ...");
    func1();
    printLine("Finished");
    return 0;
}

