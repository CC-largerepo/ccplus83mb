#include <stdarg.h>


#ifndef _WIN32
#include <wchar.h>
#endif

#define ENV_VARIABLE "ADD"

#ifdef _WIN32
#define GETENV getenv
#else
#define GETENV getenv
#endif



void func5(char * data);

void func2(char * data)
{
    func5(data);
}

void func6(char * data);

void func3(char * data)
{
    func6(data);
}

#include <stdarg.h>


#ifndef _WIN32
#include <wchar.h>
#endif

#define ENV_VARIABLE "ADD"

#ifdef _WIN32
#define GETENV getenv
#else
#define GETENV getenv
#endif



void func10(char * data);

void func5(char * data)
{
    func10(data);
}

void func12(char * data);

void func6(char * data)
{
    func12(data);
}

#include <stdarg.h>


#ifndef _WIN32
#include <wchar.h>
#endif

#define ENV_VARIABLE "ADD"

#ifdef _WIN32
#define GETENV getenv
#else
#define GETENV getenv
#endif



static void func9(char * data, ...)
{
    {
        va_list args;
        va_start(args, data);
        vfprintf(stdout, data, args);
        va_end(args);
    }
}

void func10(char * data)
{
    func9(data, data);
}

static void func11(char * data, ...)
{
    {
        va_list args;
        va_start(args, data);
        vfprintf(stdout, "%s", args);
        va_end(args);
    }
}

void func12(char * data)
{
    func11(data, data);
}

#include <stdarg.h>


#ifndef _WIN32
#include <wchar.h>
#endif

#define ENV_VARIABLE "ADD"

#ifdef _WIN32
#define GETENV getenv
#else
#define GETENV getenv
#endif



void func2(char * data);

static void func14()
{
    char * data;
    char dataBuffer[100] = "";
    data = dataBuffer;
    strcpy(data, "fixedstringtest");
    func2(data);
}

void func3(char * data);

static void func15()
{
    char * data;
    char dataBuffer[100] = "";
    data = dataBuffer;
    {
        size_t dataLen = strlen(data);
        char * environment = GETENV(ENV_VARIABLE);
        if (environment != NULL)
        {
            strncat(data+dataLen, environment, 100-dataLen-1);
        }
    }
    func3(data);
}

void func16()
{
    func14();
    func15();
}



int main(int argc, char * argv[])
{
    srand( (unsigned)time(NULL) );

    printLine("Calling ...");
    func16();
    printLine("Finished");
    return 0;
}

