#include <stdarg.h>


#ifndef _WIN32
#include <wchar.h>
#endif

#define ENV_VARIABLE "ADD"

#ifdef _WIN32
#define GETENV getenv
#else
#define GETENV getenv
#endif



char * func2(char * data)
{
    strcpy(data, "fixedstringtest");
    return data;
}

char * func3(char * data)
{
    {
        size_t dataLen = strlen(data);
        char * environment = GETENV(ENV_VARIABLE);
        if (environment != NULL)
        {
            strncat(data+dataLen, environment, 100-dataLen-1);
        }
    }
    return data;
}

#include <stdarg.h>


#ifndef _WIN32
#include <wchar.h>
#endif

#define ENV_VARIABLE "ADD"

#ifdef _WIN32
#define GETENV getenv
#else
#define GETENV getenv
#endif



char * func2(char * data);

static void func6(char * data, ...)
{
    {
        va_list args;
        va_start(args, data);
        vfprintf(stdout, data, args);
        va_end(args);
    }
}

static void func7()
{
    char * data;
    char dataBuffer[100] = "";
    data = dataBuffer;
    data = func2(data);
    func6(data, data);
}

char * func3(char * data);

static void func8(char * data, ...)
{
    {
        va_list args;
        va_start(args, data);
        vfprintf(stdout, "%s", args);
        va_end(args);
    }
}

static void func9()
{
    char * data;
    char dataBuffer[100] = "";
    data = dataBuffer;
    data = func3(data);
    func8(data, data);
}

void func10()
{
    func7();
    func9();
}



int main(int argc, char * argv[])
{
    srand( (unsigned)time(NULL) );

    printLine("Calling ...");
    func10();
    printLine("Finished");
    return 0;
}

