#include <stdarg.h>
#include <map>


#ifndef _WIN32
#include <wchar.h>
#endif

using namespace std;

namespace GenNS1
{



static void func1(char * data, ...)
{
    {
        va_list args;
        va_start(args, data);
        vfprintf(stdout, data, args);
        va_end(args);
    }
}

void func2(map<int, char *> dataMap)
{
    char * data = dataMap[2];
    func1(data, data);
}

} #include <map>


#ifndef _WIN32
#include <wchar.h>
#endif

#define ENV_VARIABLE "ADD"

#ifdef _WIN32
#define GETENV getenv
#else
#define GETENV getenv
#endif

using namespace std;

namespace GenNS1
{



void func2(map<int, char *> dataMap);

void func7()
{
    char * data;
    map<int, char *> dataMap;
    char dataBuffer[100] = "";
    data = dataBuffer;
    {
        size_t dataLen = strlen(data);
        char * environment = GETENV(ENV_VARIABLE);
        if (environment != NULL)
        {
            strncat(data+dataLen, environment, 100-dataLen-1);
        }
    }
    dataMap[0] = data;
    dataMap[1] = data;
    dataMap[2] = data;
    func2(dataMap);
}

} 



using namespace GenNS1; 

int main(int argc, char * argv[])
{
    srand( (unsigned)time(NULL) );

    printLine("Calling ...");
    func7();
    printLine("Finished");
    return 0;
}

