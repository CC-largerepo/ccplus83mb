

#ifndef _WIN32
#include <wchar.h>
#endif

namespace GenNS1
{



class GenClass1
{
public:
    GenClass1(wchar_t * dataCopy);
    ~GenClass1();

private:
    wchar_t * data;
};

}



#define ENV_VARIABLE L"ADD"

#ifdef _WIN32
#define GETENV _wgetenv
#else
#define GETENV getenv
#endif

namespace GenNS1
{
GenClass1::GenClass1(wchar_t * dataCopy)
{
    data = dataCopy;
    {
        size_t dataLen = wcslen(data);
        wchar_t * environment = GETENV(ENV_VARIABLE);
        if (environment != NULL)
        {
            wcsncat(data+dataLen, environment, 100-dataLen-1);
        }
    }
}

GenClass1::~GenClass1()
{
    fwprintf(stdout, data);
}
}


namespace GenNS1
{



void func4()
{
    wchar_t * data;
    wchar_t dataBuffer[100] = L"";
    data = dataBuffer;
    GenClass1 var1(data);
}

} 



using namespace GenNS1; 

int main(int argc, char * argv[])
{
    srand( (unsigned)time(NULL) );

    printLine("Calling ...");
    func4();
    printLine("Finished");
    return 0;
}

