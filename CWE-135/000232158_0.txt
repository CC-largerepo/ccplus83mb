

#include <wchar.h>

typedef struct var1
{
    void * structFirst;
} var2;



void func2(var2 myStruct)
{
    void * data = myStruct.structFirst;
    {
        size_t dataLen = strlen((char *)data);
        void * dest = (void *)calloc(dataLen+1, 1);
        if (dest == NULL) {exit(-1);}
        (void)strcpy(dest, data);
        printLine((char *)dest);
        free(dest);
    }
}

void func3(var2 myStruct)
{
    void * data = myStruct.structFirst;
    {
        size_t dataLen = wcslen((wchar_t *)data);
        void * dest = (void *)calloc(dataLen+1, sizeof(wchar_t));
        if (dest == NULL) {exit(-1);}
        (void)wcscpy(dest, data);
        printWLine((wchar_t *)dest);
        free(dest);
    }
}



#include <wchar.h>

typedef struct var1
{
    void * structFirst;
} var2;



void func2(var2 myStruct);

static void func5()
{
    void * data;
    var2 myStruct;
    data = NULL;
    {
        char * var4 = (char *)malloc(50*sizeof(char));
        if (var4 == NULL) {exit(-1);}
        memset(var4, 'A', 50-1);
        var4[50-1] = '\0';
        data = (void *)var4;
    }
    myStruct.structFirst = data;
    func2(myStruct);
}

void func3(var2 myStruct);

static void func6()
{
    void * data;
    var2 myStruct;
    data = NULL;
    {
        wchar_t * var3 = (wchar_t *)malloc(50*sizeof(wchar_t));
        if (var3 == NULL) {exit(-1);}
        wmemset(var3, L'A', 50-1);
        var3[50-1] = L'\0';
        data = (void *)var3;
    }
    myStruct.structFirst = data;
    func3(myStruct);
}

void func7()
{
    func5();
    func6();
}



int main(int argc, char * argv[])
{
    srand( (unsigned)time(NULL) );

    printLine("Calling ...");
    func7();
    printLine("Finished");
    return 0;
}

