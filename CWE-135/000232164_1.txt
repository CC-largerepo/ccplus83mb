

#include <wchar.h>

namespace GenNS1
{

class GenClass1
{
public:
    virtual void action(void * data) = 0;
};



class GenClass2 : public GenClass1
{
public:
    void action(void * data);
};

}



namespace GenNS1
{

void GenClass2::action(void * data)
{
    {
        size_t dataLen = strlen((char *)data);
        void * dest = (void *)calloc(dataLen+1, sizeof(wchar_t));
        if (dest == NULL) {exit(-1);}
        (void)wcscpy((wchar_t *)dest, (wchar_t *)data);
        printLine((char *)dest);
        free(dest);
    }
}

}


namespace GenNS1
{



void func2()
{
    void * data;
    data = NULL;
    {
        wchar_t * var1 = (wchar_t *)malloc(50*sizeof(wchar_t));
        if (var1 == NULL) {exit(-1);}
        wmemset(var1, L'A', 50-1);
        var1[50-1] = L'\0';
        data = (void *)var1;
    }
    GenClass1* baseObject = new GenClass2;
    baseObject->action(data);
    delete baseObject;
}

} 



using namespace GenNS1; 

int main(int argc, char * argv[])
{
    srand( (unsigned)time(NULL) );

    printLine("Calling ...");
    func2();
    printLine("Finished");
    return 0;
}

