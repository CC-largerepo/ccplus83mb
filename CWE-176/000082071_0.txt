

#include <windows.h>
#include <stdio.h>
#include <wchar.h>
#include <string.h>
#pragma comment( lib, "advapi32" )

namespace GenNS1
{

class GenClass1
{
public:
    virtual void action(wchar_t * data) = 0;
};



class GenClass3 : public GenClass1
{
public:
    void action(wchar_t * data);
};

class GenClass4 : public GenClass1
{
public:
    void action(wchar_t * data);
};

}



namespace GenNS1
{

void GenClass4::action(wchar_t * data)
{
    {
        char convertedText[10] = "";
        int requiredSize;
        requiredSize = WideCharToMultiByte(CP_ACP, WC_COMPOSITECHECK, data, -1, convertedText, 0, 0, 0);
        if (requiredSize < 10)
        {
            WideCharToMultiByte(CP_ACP, WC_COMPOSITECHECK, data, -1, convertedText, requiredSize , 0, 0);
        }
        else
        {
            printLine("Destination buffer not large enough to perform conversion.");
        }
    }
}

}




namespace GenNS1
{

void GenClass3::action(wchar_t * data)
{
    {
        char convertedText[10] = "";
        int requiredSize;
        requiredSize = WideCharToMultiByte(CP_ACP, WC_COMPOSITECHECK, data, -1, convertedText, 0, 0, 0);
        WideCharToMultiByte(CP_ACP, WC_COMPOSITECHECK, data, -1, convertedText, requiredSize , 0, 0);
    }
}

}


namespace GenNS1
{



static void func3()
{
    wchar_t * data;
    wchar_t dataBuffer[100];
    data = dataBuffer;
    wcscpy(data, L"\\u9580");
    GenClass1* baseObject = new GenClass3;
    baseObject->action(data);
    delete baseObject;
}

static void func4()
{
    wchar_t * data;
    wchar_t dataBuffer[100];
    data = dataBuffer;
    wcscpy(data, L"\\u9580\\u961c\\u9640\\u963f\\u963b\\u9644\\u9580\\u961c\\u9640\\u963f\\u963b\\u9644");
    GenClass1* baseObject = new GenClass4;
    baseObject->action(data);
    delete baseObject;
}

void func5()
{
    func3();
    func4();
}

} 



using namespace GenNS1; 

int main(int argc, char * argv[])
{
    srand( (unsigned)time(NULL) );

    printLine("Calling ...");
    func5();
    printLine("Finished");
    return 0;
}

