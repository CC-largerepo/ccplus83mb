#include <map>

using namespace std;

namespace GenNS1
{



void func2(map<int, char> dataMap)
{
    char data = dataMap[2];
    {
        char result = data + 1;
        printHexCharLine(result);
    }
}

void func3(map<int, char> dataMap)
{
    char data = dataMap[2];
    if (data < CHAR_MAX)
    {
        char result = data + 1;
        printHexCharLine(result);
    }
    else
    {
        printLine("data value is too large to perform arithmetic safely.");
    }
}

} #include <map>

using namespace std;

namespace GenNS1
{



void func2(map<int, char> dataMap);

static void func5()
{
    char data;
    map<int, char> dataMap;
    data = ' ';
    data = 2;
    dataMap[0] = data;
    dataMap[1] = data;
    dataMap[2] = data;
    func2(dataMap);
}

void func3(map<int, char> dataMap);

static void func6()
{
    char data;
    map<int, char> dataMap;
    data = ' ';
    fscanf (stdin, "%c", &data);
    dataMap[0] = data;
    dataMap[1] = data;
    dataMap[2] = data;
    func3(dataMap);
}

void func7()
{
    func5();
    func6();
}

} 



using namespace GenNS1; 

int main(int argc, char * argv[])
{
    srand( (unsigned)time(NULL) );

    printLine("Calling ...");
    func7();
    printLine("Finished");
    return 0;
}

