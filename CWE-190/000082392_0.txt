#include <list>

#include <math.h>

using namespace std;

namespace GenNS1
{



void func2(list<char> dataList)
{
    char data = dataList.back();
    {
        char result = data * data;
        printHexCharLine(result);
    }
}

void func3(list<char> dataList)
{
    char data = dataList.back();
    if (abs((long)data) <= (long)sqrt((double)CHAR_MAX))
    {
        char result = data * data;
        printHexCharLine(result);
    }
    else
    {
        printLine("data value is too large to perform arithmetic safely.");
    }
}

} #include <list>

using namespace std;

namespace GenNS1
{



void func2(list<char> dataList);

static void func5()
{
    char data;
    list<char> dataList;
    data = ' ';
    data = 2;
    dataList.push_back(data);
    dataList.push_back(data);
    dataList.push_back(data);
    func2(dataList);
}

void func3(list<char> dataList);

static void func6()
{
    char data;
    list<char> dataList;
    data = ' ';
    data = CHAR_MAX;
    dataList.push_back(data);
    dataList.push_back(data);
    dataList.push_back(data);
    func3(dataList);
}

void func7()
{
    func5();
    func6();
}

} 



using namespace GenNS1; 

int main(int argc, char * argv[])
{
    srand( (unsigned)time(NULL) );

    printLine("Calling ...");
    func7();
    printLine("Finished");
    return 0;
}

