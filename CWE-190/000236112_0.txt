#include "std_testcase.h"

static int staticReturnsTrue()
{
    return 1;
}

static int staticReturnsFalse()
{
    return 0;
}



static void func4()
{
    int64_t data;
    data = 0LL;
    if(staticReturnsTrue())
    {
        data = (int64_t)RAND64();
    }
    if(staticReturnsFalse())
    {
        printLine("Benign, fixed string");
    }
    else
    {
        if (data < LLONG_MAX)
        {
            data++;
            int64_t result = data;
            printLongLongLine(result);
        }
        else
        {
            printLine("data value is too large to perform arithmetic safely.");
        }
    }
}

static void func5()
{
    int64_t data;
    data = 0LL;
    if(staticReturnsTrue())
    {
        data = (int64_t)RAND64();
    }
    if(staticReturnsTrue())
    {
        if (data < LLONG_MAX)
        {
            data++;
            int64_t result = data;
            printLongLongLine(result);
        }
        else
        {
            printLine("data value is too large to perform arithmetic safely.");
        }
    }
}

static void func6()
{
    int64_t data;
    data = 0LL;
    if(staticReturnsFalse())
    {
        printLine("Benign, fixed string");
    }
    else
    {
        data = 2;
    }
    if(staticReturnsTrue())
    {
        {
            data++;
            int64_t result = data;
            printLongLongLine(result);
        }
    }
}

static void func7()
{
    int64_t data;
    data = 0LL;
    if(staticReturnsTrue())
    {
        data = 2;
    }
    if(staticReturnsTrue())
    {
        {
            data++;
            int64_t result = data;
            printLongLongLine(result);
        }
    }
}

void func8()
{
    func4();
    func5();
    func6();
    func7();
}



int main(int argc, char * argv[])
{
    srand( (unsigned)time(NULL) );

    printLine("Calling ...");
    func8();
    printLine("Finished");
    return 0;
}

