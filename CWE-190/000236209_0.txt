

#define CHAR_ARRAY_SIZE (3 * sizeof(data) + 2)



void func5(int data);

void func2(int data)
{
    func5(data);
}

void func6(int data);

void func3(int data)
{
    func6(data);
}



#define CHAR_ARRAY_SIZE (3 * sizeof(data) + 2)



void func5(int data)
{
    {
        data++;
        int result = data;
        printIntLine(result);
    }
}

void func6(int data)
{
    if (data < INT_MAX)
    {
        data++;
        int result = data;
        printIntLine(result);
    }
    else
    {
        printLine("data value is too large to perform arithmetic safely.");
    }
}



#define CHAR_ARRAY_SIZE (3 * sizeof(data) + 2)



void func2(int data);

static void func8()
{
    int data;
    data = 0;
    data = 2;
    func2(data);
}

void func3(int data);

static void func9()
{
    int data;
    data = 0;
    {
        char inputBuffer[CHAR_ARRAY_SIZE] = "";
        if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)
        {
            data = atoi(inputBuffer);
        }
        else
        {
            printLine("fgets() failed.");
        }
    }
    func3(data);
}

void func10()
{
    func8();
    func9();
}



int main(int argc, char * argv[])
{
    srand( (unsigned)time(NULL) );

    printLine("Calling ...");
    func10();
    printLine("Finished");
    return 0;
}

