#include <vector>

using namespace std;

namespace GenNS1
{



void func2(vector<char> dataVector)
{
    char data = dataVector[2];
    {
        char result = data - 1;
        printHexCharLine(result);
    }
}

void func3(vector<char> dataVector)
{
    char data = dataVector[2];
    if (data > CHAR_MIN)
    {
        char result = data - 1;
        printHexCharLine(result);
    }
    else
    {
        printLine("data value is too large to perform subtraction.");
    }
}

} #include <vector>

using namespace std;

namespace GenNS1
{



void func2(vector<char> dataVector);

static void func5()
{
    char data;
    vector<char> dataVector;
    data = ' ';
    data = -2;
    dataVector.insert(dataVector.end(), 1, data);
    dataVector.insert(dataVector.end(), 1, data);
    dataVector.insert(dataVector.end(), 1, data);
    func2(dataVector);
}

void func3(vector<char> dataVector);

static void func6()
{
    char data;
    vector<char> dataVector;
    data = ' ';
    data = CHAR_MIN;
    dataVector.insert(dataVector.end(), 1, data);
    dataVector.insert(dataVector.end(), 1, data);
    dataVector.insert(dataVector.end(), 1, data);
    func3(dataVector);
}

void func7()
{
    func5();
    func6();
}

} 



using namespace GenNS1; 

int main(int argc, char * argv[])
{
    srand( (unsigned)time(NULL) );

    printLine("Calling ...");
    func7();
    printLine("Finished");
    return 0;
}

