

#define CHAR_ARRAY_SIZE (3 * sizeof(data) + 2)

extern int var1;
extern int var2;
extern int var3;



void func2()
{
    int data = var2;
    if(data < 0) 
    {
        int result = data * 2;
        printIntLine(result);
    }
}

void func3()
{
    int data = var3;
    if(data < 0) 
    {
        if (data > (INT_MIN/2))
        {
            int result = data * 2;
            printIntLine(result);
        }
        else
        {
            printLine("data value is too small to perform multiplication.");
        }
    }
}



#define CHAR_ARRAY_SIZE (3 * sizeof(data) + 2)

int var1;
int var2;
int var3;



void func2();
void func3();

static void func5()
{
    int data;
    data = 0;
    data = -2;
    var2 = data;
    func2();
}

static void func6()
{
    int data;
    data = 0;
    {
        char inputBuffer[CHAR_ARRAY_SIZE] = "";
        if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)
        {
            data = atoi(inputBuffer);
        }
        else
        {
            printLine("fgets() failed.");
        }
    }
    var3 = data;
    func3();
}

void func7()
{
    func5();
    func6();
}



int main(int argc, char * argv[])
{
    srand( (unsigned)time(NULL) );

    printLine("Calling ...");
    func7();
    printLine("Finished");
    return 0;
}

