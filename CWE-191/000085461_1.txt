

#define CHAR_ARRAY_SIZE (3 * sizeof(data) + 2)

typedef struct var1
{
    int structFirst;
} var2;



void func1(var2 myStruct)
{
    int data = myStruct.structFirst;
    {
        int result = data - 1;
        printIntLine(result);
    }
}



#define CHAR_ARRAY_SIZE (3 * sizeof(data) + 2)

typedef struct var1
{
    int structFirst;
} var2;



void func1(var2 myStruct);

void func4()
{
    int data;
    var2 myStruct;
    data = 0;
    {
        char inputBuffer[CHAR_ARRAY_SIZE] = "";
        if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)
        {
            data = atoi(inputBuffer);
        }
        else
        {
            printLine("fgets() failed.");
        }
    }
    myStruct.structFirst = data;
    func1(myStruct);
}



int main(int argc, char * argv[])
{
    srand( (unsigned)time(NULL) );

    printLine("Calling ...");
    func4();
    printLine("Finished");
    return 0;
}

