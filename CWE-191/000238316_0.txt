



extern int var2;
extern int var3;
extern int var4;

void func2(int data)
{
    if(var2)
    {
        printLine("Benign, fixed string");
    }
    else
    {
        if (data > INT_MIN)
        {
            --data;
            int result = data;
            printIntLine(result);
        }
        else
        {
            printLine("data value is too large to perform arithmetic safely.");
        }
    }
}

void func3(int data)
{
    if(var3)
    {
        if (data > INT_MIN)
        {
            --data;
            int result = data;
            printIntLine(result);
        }
        else
        {
            printLine("data value is too large to perform arithmetic safely.");
        }
    }
}

void func4(int data)
{
    if(var4)
    {
        {
            --data;
            int result = data;
            printIntLine(result);
        }
    }
}



#define CHAR_ARRAY_SIZE (3 * sizeof(data) + 2)



int var2 = 0;
int var3 = 0;
int var4 = 0;

void func2(int data);

static void func6()
{
    int data;
    data = 0;
    {
        char inputBuffer[CHAR_ARRAY_SIZE] = "";
        if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)
        {
            data = atoi(inputBuffer);
        }
        else
        {
            printLine("fgets() failed.");
        }
    }
    var2 = 0; 
    func2(data);
}

void func3(int data);

static void func7()
{
    int data;
    data = 0;
    {
        char inputBuffer[CHAR_ARRAY_SIZE] = "";
        if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)
        {
            data = atoi(inputBuffer);
        }
        else
        {
            printLine("fgets() failed.");
        }
    }
    var3 = 1; 
    func3(data);
}

void func4(int data);

static void func8()
{
    int data;
    data = 0;
    data = -2;
    var4 = 1; 
    func4(data);
}

void func9()
{
    func6();
    func7();
    func8();
}



int main(int argc, char * argv[])
{
    srand( (unsigned)time(NULL) );

    printLine("Calling ...");
    func9();
    printLine("Finished");
    return 0;
}

