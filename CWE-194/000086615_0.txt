#include <vector>

using namespace std;

namespace GenNS1
{



void func2(vector<short> dataVector)
{
    short data = dataVector[2];
    {
        char source[100];
        char dest[100] = "";
        memset(source, 'A', 100-1);
        source[100-1] = '\0';
        if (data < 100)
        {
            memmove(dest, source, data);
            dest[data] = '\0'; 
        }
        printLine(dest);
    }
}

} #include <vector>

#define CHAR_ARRAY_SIZE 8

using namespace std;

namespace GenNS1
{



void func2(vector<short> dataVector);

static void func4()
{
    short data;
    vector<short> dataVector;
    data = 0;
    data = 100-1;
    dataVector.insert(dataVector.end(), 1, data);
    dataVector.insert(dataVector.end(), 1, data);
    dataVector.insert(dataVector.end(), 1, data);
    func2(dataVector);
}

void func5()
{
    func4();
}

} 



using namespace GenNS1; 

int main(int argc, char * argv[])
{
    srand( (unsigned)time(NULL) );

    printLine("Calling ...");
    func5();
    printLine("Finished");
    return 0;
}

