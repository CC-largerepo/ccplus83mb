

namespace GenNS1
{



class GenClass2
{
public:
    GenClass2(short dataCopy);
    ~GenClass2();

private:
    short data;
};

}



namespace GenNS1
{
GenClass2::GenClass2(short dataCopy)
{
    data = dataCopy;
    data = 100-1;
}

GenClass2::~GenClass2()
{
    if (data < 100)
    {
        char * dataBuffer = (char *)malloc(data);
        memset(dataBuffer, 'A', data-1);
        dataBuffer[data-1] = '\0';
        printLine(dataBuffer);
        free(dataBuffer);
    }
}
}


namespace GenNS1
{



static void func4()
{
    short data;
    data = 0;
    GenClass2 * var2 =  new GenClass2(data);
    delete var2;
}

void func5()
{
    func4();
}

} 



using namespace GenNS1; 

int main(int argc, char * argv[])
{
    srand( (unsigned)time(NULL) );

    printLine("Calling ...");
    func5();
    printLine("Finished");
    return 0;
}

