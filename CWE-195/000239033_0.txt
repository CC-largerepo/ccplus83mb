

#define CHAR_ARRAY_SIZE (3 * sizeof(data) + 2)



void func4(int data);

void func2(int data)
{
    func4(data);
}



#define CHAR_ARRAY_SIZE (3 * sizeof(data) + 2)



void func6(int data);

void func4(int data)
{
    func6(data);
}



#define CHAR_ARRAY_SIZE (3 * sizeof(data) + 2)



void func8(int data);

void func6(int data)
{
    func8(data);
}



#define CHAR_ARRAY_SIZE (3 * sizeof(data) + 2)



void func8(int data)
{
    if (data < 100)
    {
        char * dataBuffer = (char *)malloc(data);
        if (dataBuffer == NULL) {exit(-1);}
        memset(dataBuffer, 'A', data-1);
        dataBuffer[data-1] = '\0';
        printLine(dataBuffer);
        free(dataBuffer);
    }
}



#define CHAR_ARRAY_SIZE (3 * sizeof(data) + 2)



void func2(int data);

static void func10()
{
    int data;
    data = -1;
    data = 100-1;
    func2(data);
}

void func11()
{
    func10();
}



int main(int argc, char * argv[])
{
    srand( (unsigned)time(NULL) );

    printLine("Calling ...");
    func11();
    printLine("Finished");
    return 0;
}

