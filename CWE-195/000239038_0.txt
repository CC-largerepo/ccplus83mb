

#define CHAR_ARRAY_SIZE (3 * sizeof(data) + 2)

typedef struct var1
{
    int structFirst;
} var2;



void func2(var2 myStruct)
{
    int data = myStruct.structFirst;
    if (data < 100)
    {
        char * dataBuffer = (char *)malloc(data);
        if (dataBuffer == NULL) {exit(-1);}
        memset(dataBuffer, 'A', data-1);
        dataBuffer[data-1] = '\0';
        printLine(dataBuffer);
        free(dataBuffer);
    }
}



#define CHAR_ARRAY_SIZE (3 * sizeof(data) + 2)

typedef struct var1
{
    int structFirst;
} var2;



void func2(var2 myStruct);

static void func4()
{
    int data;
    var2 myStruct;
    data = -1;
    data = 100-1;
    myStruct.structFirst = data;
    func2(myStruct);
}

void func5()
{
    func4();
}



int main(int argc, char * argv[])
{
    srand( (unsigned)time(NULL) );

    printLine("Calling ...");
    func5();
    printLine("Finished");
    return 0;
}

