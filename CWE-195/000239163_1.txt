#include <vector>

using namespace std;

namespace GenNS1
{



void func1(vector<int> dataVector)
{
    int data = dataVector[2];
    if (data < 100)
    {
        char * dataBuffer = (char *)malloc(data);
        if (dataBuffer == NULL) {exit(-1);}
        memset(dataBuffer, 'A', data-1);
        dataBuffer[data-1] = '\0';
        printLine(dataBuffer);
        free(dataBuffer);
    }
}

} #include <vector>

using namespace std;

namespace GenNS1
{



void func1(vector<int> dataVector);

void func3()
{
    int data;
    vector<int> dataVector;
    data = -1;
    data = -1;
    dataVector.insert(dataVector.end(), 1, data);
    dataVector.insert(dataVector.end(), 1, data);
    dataVector.insert(dataVector.end(), 1, data);
    func1(dataVector);
}

} 



using namespace GenNS1; 

int main(int argc, char * argv[])
{
    srand( (unsigned)time(NULL) );

    printLine("Calling ...");
    func3();
    printLine("Finished");
    return 0;
}

