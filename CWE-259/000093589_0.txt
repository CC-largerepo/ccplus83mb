#include <map>

#include <wchar.h>

#include <windows.h>
#pragma comment(lib, "advapi32.lib")

using namespace std;

namespace GenNS1
{



void func2(map<int, wchar_t *> passwordMap)
{
    wchar_t * password = passwordMap[2];
    {
        HANDLE pHandle;
        wchar_t * username = L"User";
        wchar_t * domain = L"Domain";
        if (LogonUserW(
                    username,
                    domain,
                    password,
                    LOGON32_LOGON_NETWORK,
                    LOGON32_PROVIDER_DEFAULT,
                    &pHandle) != 0)
        {
            printLine("User logged in successfully.");
            CloseHandle(pHandle);
        }
        else
        {
            printLine("Unable to login.");
        }
    }
}

} #include <map>

#include <wchar.h>

#define PASSWORD L"ABCD1234!"

using namespace std;

namespace GenNS1
{



void func2(map<int, wchar_t *> passwordMap);

static void func4()
{
    wchar_t * password;
    map<int, wchar_t *> passwordMap;
    wchar_t passwordBuffer[100] = L"";
    password = passwordBuffer;
    {
        size_t passwordLen = 0;
        if (fgetws(password, 100, stdin) == NULL)
        {
            printLine("fgetws() failed");
            password[0] = L'\0';
        }
        passwordLen = wcslen(password);
        if (passwordLen > 0)
        {
            password[passwordLen-1] = L'\0';
        }
    }
    passwordMap[0] = password;
    passwordMap[1] = password;
    passwordMap[2] = password;
    func2(passwordMap);
}

void func5()
{
    func4();
}

} 



using namespace GenNS1; 

int main(int argc, char * argv[])
{
    srand( (unsigned)time(NULL) );

    printLine("Calling ...");
    func5();
    printLine("Finished");
    return 0;
}

