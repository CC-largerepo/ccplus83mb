

#include <wchar.h>

namespace GenNS1
{

class GenClass1
{
public:
    virtual void action(wchar_t * password) const = 0;
};



class GenClass2 : public GenClass1
{
public:
    void action(wchar_t * password) const;
};

}



#include <windows.h>
#pragma comment(lib, "advapi32.lib")

namespace GenNS1
{

void GenClass2::action(wchar_t * password) const
{
    {
        HANDLE pHandle;
        wchar_t * username = L"User";
        wchar_t * domain = L"Domain";
        if (LogonUserW(
                    username,
                    domain,
                    password,
                    LOGON32_LOGON_NETWORK,
                    LOGON32_PROVIDER_DEFAULT,
                    &pHandle) != 0)
        {
            printLine("User logged in successfully.");
            CloseHandle(pHandle);
        }
        else
        {
            printLine("Unable to login.");
        }
    }
}

}


#define PASSWORD L"ABCD1234!"

namespace GenNS1
{



void func1()
{
    wchar_t * password;
    wchar_t passwordBuffer[100] = L"";
    password = passwordBuffer;
    wcscpy(password, PASSWORD);
    const GenClass1& baseObject = GenClass2();
    baseObject.action(password);
}

} 



using namespace GenNS1; 

int main(int argc, char * argv[])
{
    srand( (unsigned)time(NULL) );

    printLine("Calling ...");
    func1();
    printLine("Finished");
    return 0;
}

