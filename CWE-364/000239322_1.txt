#include "std_testcase.h"

#include <signal.h>

typedef struct _structSigAtomic
{
    sig_atomic_t val;
}   structSigAtomic;

structSigAtomic *var1 = NULL;
structSigAtomic *var2 = NULL;

static void func1(int sig)
{
    if (var1 != NULL)
    {
        var1->val = 2;
    }
}

static void func2(int sig)
{
    if (var2 != NULL)
    {
        var2->val = 2;
    }
}

static int staticReturnsTrue()
{
    return 1;
}

static int staticReturnsFalse()
{
    return 0;
}



void func5()
{
    if(staticReturnsTrue())
    {
        {
            structSigAtomic *gStructSigAtomic = NULL;
            signal(SIGINT, SIG_DFL);
            if (var1 != NULL)
            {
                free(var1);
                var1 = NULL;
            }
            gStructSigAtomic = (structSigAtomic*)malloc(sizeof(structSigAtomic));
            if (gStructSigAtomic == NULL) {exit(-1);}
            var1 = gStructSigAtomic;
            var1->val = 1;
            signal(SIGINT, func1);
            if (var1 != NULL)
            {
                free(var1);
                var1 = NULL;
            }
        }
    }
}



int main(int argc, char * argv[])
{
    srand( (unsigned)time(NULL) );

    printLine("Calling ...");
    func5();
    printLine("Finished");
    return 0;
}

