#include "std_testcase.h"

#include <signal.h>

typedef struct _structSigAtomic
{
    sig_atomic_t val;
}   structSigAtomic;

structSigAtomic *var1 = NULL;
structSigAtomic *var2 = NULL;

static void func1(int sig)
{
    if (var1 != NULL)
    {
        var1->val = 2;
    }
}

static void func2(int sig)
{
    if (var2 != NULL)
    {
        var2->val = 2;
    }
}



static void func5()
{
    switch(5)
    {
    case 6:
        printLine("Benign, fixed string");
        break;
    default:
    {
        structSigAtomic *gStructSigAtomic = NULL;
        signal(SIGINT, SIG_DFL);
        if (var2 != NULL)
        {
            free(var2);
            var2 = 0;
        }
        gStructSigAtomic = (structSigAtomic*)malloc(sizeof(structSigAtomic));
        if (gStructSigAtomic == NULL) {exit(-1);}
        var2 = gStructSigAtomic;
        var2->val = 1;
        signal(SIGINT, func2);
        signal(SIGINT, SIG_DFL);
        if (var2 != NULL)
        {
            free(var2);
            var2 = NULL;
        }
        signal(SIGINT, func2);
    }
    break;
    }
}

static void func7()
{
    switch(6)
    {
    case 6:
    {
        structSigAtomic *gStructSigAtomic = NULL;
        signal(SIGINT, SIG_DFL);
        if (var2 != NULL)
        {
            free(var2);
            var2 = 0;
        }
        gStructSigAtomic = (structSigAtomic*)malloc(sizeof(structSigAtomic));
        if (gStructSigAtomic == NULL) {exit(-1);}
        var2 = gStructSigAtomic;
        var2->val = 1;
        signal(SIGINT, func2);
        signal(SIGINT, SIG_DFL);
        if (var2 != NULL)
        {
            free(var2);
            var2 = NULL;
        }
        signal(SIGINT, func2);
    }
    break;
    default:
        printLine("Benign, fixed string");
        break;
    }
}

void func9()
{
    func5();
    func7();
}



int main(int argc, char * argv[])
{
    srand( (unsigned)time(NULL) );

    printLine("Calling ...");
    func9();
    printLine("Finished");
    return 0;
}

