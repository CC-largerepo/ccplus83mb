#include "std_testcase.h"

#include "std_thread.h"

#define N_ITERS 1000000

static int var1 = 0;
static int var2 = 0;
static stdThreadLock var3 = NULL;

static void func1(void *args)
{
    int i;
    for (i = 0; i < N_ITERS; i++)
    {
        var1 = var1 + 1;
    }
}

static void func2(void *args)
{
    int i;
    stdThreadLockAcquire(var3);
    for (i = 0; i < N_ITERS; i++)
    {
        var2 = var2 + 1;
    }
    stdThreadLockRelease(var3);
}

static const int STATIC_CONST_FIVE = 5;



void func3()
{
    if(STATIC_CONST_FIVE==5)
    {
        {
            stdThread threadA = NULL;
            stdThread threadB = NULL;
            var1 = 0;
            if (!stdThreadCreate(func1, NULL, &threadA))
            {
                threadA = NULL;
            }
            if (!stdThreadCreate(func1, NULL, &threadB))
            {
                threadB = NULL;
            }
            if (threadA && stdThreadJoin(threadA))
            {
                stdThreadDestroy(threadA);
            }
            if (threadB && stdThreadJoin(threadB))
            {
                stdThreadDestroy(threadB);
            }
            printIntLine(var1);
        }
    }
}



int main(int argc, char * argv[])
{
    srand( (unsigned)time(NULL) );

    printLine("Calling ...");
    func3();
    printLine("Finished");
    return 0;
}

