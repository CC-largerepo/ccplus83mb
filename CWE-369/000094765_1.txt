#include <map>

#include <math.h>

using namespace std;

namespace GenNS1
{



void func1(map<int, float> dataMap)
{
    float data = dataMap[2];
    {
        int result = (int)(100.0 / data);
        printIntLine(result);
    }
}

} #include <map>

#include <math.h>

#define CHAR_ARRAY_SIZE 20

using namespace std;

namespace GenNS1
{



void func1(map<int, float> dataMap);

void func4()
{
    float data;
    map<int, float> dataMap;
    data = 0.0F;
    {
        char inputBuffer[CHAR_ARRAY_SIZE];
        if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)
        {
            data = (float)atof(inputBuffer);
        }
        else
        {
            printLine("fgets() failed.");
        }
    }
    dataMap[0] = data;
    dataMap[1] = data;
    dataMap[2] = data;
    func1(dataMap);
}

} 



using namespace GenNS1; 

int main(int argc, char * argv[])
{
    srand( (unsigned)time(NULL) );

    printLine("Calling ...");
    func4();
    printLine("Finished");
    return 0;
}

