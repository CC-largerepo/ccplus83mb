

#include <math.h>

namespace GenNS1
{

class GenClass1
{
public:
    virtual void action(float data) = 0;
};



class GenClass2 : public GenClass1
{
public:
    void action(float data);
};

}



namespace GenNS1
{

void GenClass2::action(float data)
{
    {
        int result = (int)(100.0 / data);
        printIntLine(result);
    }
}

}


#define CHAR_ARRAY_SIZE 20

namespace GenNS1
{



void func2()
{
    float data;
    data = 0.0F;
    {
        char inputBuffer[CHAR_ARRAY_SIZE];
        if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)
        {
            data = (float)atof(inputBuffer);
        }
        else
        {
            printLine("fgets() failed.");
        }
    }
    GenClass1* baseObject = new GenClass2;
    baseObject->action(data);
    delete baseObject;
}

} 



using namespace GenNS1; 

int main(int argc, char * argv[])
{
    srand( (unsigned)time(NULL) );

    printLine("Calling ...");
    func2();
    printLine("Finished");
    return 0;
}

