

#include <math.h>

namespace GenNS1
{



class GenClass1
{
public:
    GenClass1(float dataCopy);
    ~GenClass1();

private:
    float data;
};

}



#define CHAR_ARRAY_SIZE 20

namespace GenNS1
{
GenClass1::GenClass1(float dataCopy)
{
    data = dataCopy;
    {
        char inputBuffer[CHAR_ARRAY_SIZE];
        if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)
        {
            data = (float)atof(inputBuffer);
        }
        else
        {
            printLine("fgets() failed.");
        }
    }
}

GenClass1::~GenClass1()
{
    {
        int result = (int)(100.0 / data);
        printIntLine(result);
    }
}
}


namespace GenNS1
{



void func4()
{
    float data;
    data = 0.0F;
    GenClass1 * var1 = new GenClass1(data);
    delete var1;
}

} 



using namespace GenNS1; 

int main(int argc, char * argv[])
{
    srand( (unsigned)time(NULL) );

    printLine("Calling ...");
    func4();
    printLine("Finished");
    return 0;
}

