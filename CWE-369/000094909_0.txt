#include <map>

#include <math.h>

using namespace std;

namespace GenNS1
{



void func2(map<int, float> dataMap)
{
    float data = dataMap[2];
    {
        int result = (int)(100.0 / data);
        printIntLine(result);
    }
}

void func3(map<int, float> dataMap)
{
    float data = dataMap[2];
    if(fabs(data) > 0.000001)
    {
        int result = (int)(100.0 / data);
        printIntLine(result);
    }
    else
    {
        printLine("This would result in a divide by zero");
    }
}

} #include <map>

#include <math.h>

using namespace std;

namespace GenNS1
{



void func2(map<int, float> dataMap);

static void func5()
{
    float data;
    map<int, float> dataMap;
    data = 0.0F;
    data = 2.0F;
    dataMap[0] = data;
    dataMap[1] = data;
    dataMap[2] = data;
    func2(dataMap);
}

void func3(map<int, float> dataMap);

static void func6()
{
    float data;
    map<int, float> dataMap;
    data = 0.0F;
    data = (float)RAND32();
    dataMap[0] = data;
    dataMap[1] = data;
    dataMap[2] = data;
    func3(dataMap);
}

void func7()
{
    func5();
    func6();
}

} 



using namespace GenNS1; 

int main(int argc, char * argv[])
{
    srand( (unsigned)time(NULL) );

    printLine("Calling ...");
    func7();
    printLine("Finished");
    return 0;
}

