

#define CHAR_ARRAY_SIZE (3 * sizeof(data) + 2)



void func5(int data);

void func2(int data)
{
    func5(data);
}

void func6(int data);

void func3(int data)
{
    func6(data);
}



#define CHAR_ARRAY_SIZE (3 * sizeof(data) + 2)



void func8(int data);

void func5(int data)
{
    func8(data);
}

void func9(int data);

void func6(int data)
{
    func9(data);
}



#define CHAR_ARRAY_SIZE (3 * sizeof(data) + 2)



void func11(int data);

void func8(int data)
{
    func11(data);
}

void func12(int data);

void func9(int data)
{
    func12(data);
}



#define CHAR_ARRAY_SIZE (3 * sizeof(data) + 2)



void func11(int data)
{
    printIntLine(100 / data);
}

void func12(int data)
{
    if( data != 0 )
    {
        printIntLine(100 / data);
    }
    else
    {
        printLine("This would result in a divide by zero");
    }
}



#define CHAR_ARRAY_SIZE (3 * sizeof(data) + 2)



void func2(int data);

static void func14()
{
    int data;
    data = -1;
    data = 7;
    func2(data);
}

void func3(int data);

static void func15()
{
    int data;
    data = -1;
    {
        char inputBuffer[CHAR_ARRAY_SIZE] = "";
        if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)
        {
            data = atoi(inputBuffer);
        }
        else
        {
            printLine("fgets() failed.");
        }
    }
    func3(data);
}

void func16()
{
    func14();
    func15();
}



int main(int argc, char * argv[])
{
    srand( (unsigned)time(NULL) );

    printLine("Calling ...");
    func16();
    printLine("Finished");
    return 0;
}

