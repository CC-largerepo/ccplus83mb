

#define CHAR_ARRAY_SIZE (3 * sizeof(count) + 2)



void func5(int count);

void func2(int count)
{
    func5(count);
}

void func6(int count);

void func3(int count)
{
    func6(count);
}



#define CHAR_ARRAY_SIZE (3 * sizeof(count) + 2)



void func8(int count);

void func5(int count)
{
    func8(count);
}

void func9(int count);

void func6(int count)
{
    func9(count);
}



#define CHAR_ARRAY_SIZE (3 * sizeof(count) + 2)



void func8(int count)
{
    {
        size_t i = 0;
        for (i = 0; i < (size_t)count; i++)
        {
            printLine("Hello");
        }
    }
}

void func9(int count)
{
    {
        size_t i = 0;
        if (count > 0 && count <= 20)
        {
            for (i = 0; i < (size_t)count; i++)
            {
                printLine("Hello");
            }
        }
    }
}



#define CHAR_ARRAY_SIZE (3 * sizeof(count) + 2)



void func2(int count);

static void func11()
{
    int count;
    count = -1;
    count = 20;
    func2(count);
}

void func3(int count);

static void func12()
{
    int count;
    count = -1;
    {
        char inputBuffer[CHAR_ARRAY_SIZE] = "";
        if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)
        {
            count = atoi(inputBuffer);
        }
        else
        {
            printLine("fgets() failed.");
        }
    }
    func3(count);
}

void func13()
{
    func11();
    func12();
}



int main(int argc, char * argv[])
{
    srand( (unsigned)time(NULL) );

    printLine("Calling ...");
    func13();
    printLine("Finished");
    return 0;
}

