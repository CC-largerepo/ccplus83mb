

#ifdef _WIN32
#include <windows.h>
#define SLEEP Sleep
#else
#include <unistd.h>
#define SLEEP usleep
#endif

typedef struct var1
{
    int structFirst;
} var2;



void func2(var2 myStruct)
{
    int count = myStruct.structFirst;
    SLEEP(count);
    printLine("Sleep time possibly too long");
}

void func3(var2 myStruct)
{
    int count = myStruct.structFirst;
    if (count > 0 && count <= 2000)
    {
        SLEEP(count);
        printLine("Sleep time OK");
    }
    else
    {
        printLine("Sleep time too long");
    }
}



#ifdef _WIN32
#include <windows.h>
#define SLEEP Sleep
#else
#include <unistd.h>
#define SLEEP usleep
#endif

typedef struct var1
{
    int structFirst;
} var2;



void func2(var2 myStruct);

static void func5()
{
    int count;
    var2 myStruct;
    count = -1;
    count = 20;
    myStruct.structFirst = count;
    func2(myStruct);
}

void func3(var2 myStruct);

static void func6()
{
    int count;
    var2 myStruct;
    count = -1;
    fscanf(stdin, "%d", &count);
    myStruct.structFirst = count;
    func3(myStruct);
}

void func7()
{
    func5();
    func6();
}



int main(int argc, char * argv[])
{
    srand( (unsigned)time(NULL) );

    printLine("Calling ...");
    func7();
    printLine("Finished");
    return 0;
}

