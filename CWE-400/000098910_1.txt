

namespace GenNS1
{

class GenClass1
{
public:
    virtual void action(int count) = 0;
};



class GenClass2 : public GenClass1
{
public:
    void action(int count);
};

}



#ifdef _WIN32
#include <windows.h>
#define SLEEP Sleep
#else
#include <unistd.h>
#define SLEEP usleep
#endif

namespace GenNS1
{

void GenClass2::action(int count)
{
    SLEEP(count);
    printLine("Sleep time possibly too long");
}

}


namespace GenNS1
{



void func2()
{
    int count;
    count = -1;
    fscanf(stdin, "%d", &count);
    GenClass1* baseObject = new GenClass2;
    baseObject->action(count);
    delete baseObject;
}

} 



using namespace GenNS1; 

int main(int argc, char * argv[])
{
    srand( (unsigned)time(NULL) );

    printLine("Calling ...");
    func2();
    printLine("Finished");
    return 0;
}

