#include <list>

using namespace std;

namespace GenNS1
{



void func2(list<int> countList)
{
    int count = countList.back();
    {
        size_t i = 0;
        for (i = 0; i < (size_t)count; i++)
        {
            printLine("Hello");
        }
    }
}

void func3(list<int> countList)
{
    int count = countList.back();
    {
        size_t i = 0;
        if (count > 0 && count <= 20)
        {
            for (i = 0; i < (size_t)count; i++)
            {
                printLine("Hello");
            }
        }
    }
}

} #include <list>

using namespace std;

namespace GenNS1
{



void func2(list<int> countList);

static void func5()
{
    int count;
    list<int> countList;
    count = -1;
    count = 20;
    countList.push_back(count);
    countList.push_back(count);
    countList.push_back(count);
    func2(countList);
}

void func3(list<int> countList);

static void func6()
{
    int count;
    list<int> countList;
    count = -1;
    count = RAND32();
    countList.push_back(count);
    countList.push_back(count);
    countList.push_back(count);
    func3(countList);
}

void func7()
{
    func5();
    func6();
}

} 



using namespace GenNS1; 

int main(int argc, char * argv[])
{
    srand( (unsigned)time(NULL) );

    printLine("Calling ...");
    func7();
    printLine("Finished");
    return 0;
}

