

namespace GenNS1
{

class GenClass1
{
public:
    virtual void action(int count) = 0;
};



class GenClass2 : public GenClass1
{
public:
    void action(int count);
};

}



#define SENTENCE "This is the sentence we are printing to the file. "

namespace GenNS1
{

void GenClass2::action(int count)
{
    {
        size_t i = 0;
        FILE *pFile = NULL;
        const char *filename = ";
        pFile = fopen(filename, "w+");
        if (pFile == NULL)
        {
            exit(1);
        }
        for (i = 0; i < (size_t)count; i++)
        {
            if (strlen(SENTENCE) != fwrite(SENTENCE, sizeof(char), strlen(SENTENCE), pFile))
            {
                exit(1);
            }
        }
        if (pFile)
        {
            fclose(pFile);
        }
    }
}

}


namespace GenNS1
{



void func2()
{
    int count;
    count = -1;
    count = RAND32();
    GenClass1* baseObject = new GenClass2;
    baseObject->action(count);
    delete baseObject;
}

} 



using namespace GenNS1; 

int main(int argc, char * argv[])
{
    srand( (unsigned)time(NULL) );

    printLine("Calling ...");
    func2();
    printLine("Finished");
    return 0;
}

