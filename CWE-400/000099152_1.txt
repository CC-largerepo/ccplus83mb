

namespace GenNS1
{



class GenClass1
{
public:
    GenClass1(int countCopy);
    ~GenClass1();

private:
    int count;
};

}



#define SENTENCE "This is the sentence we are printing to the file. "

namespace GenNS1
{
GenClass1::GenClass1(int countCopy)
{
    count = countCopy;
    count = RAND32();
}

GenClass1::~GenClass1()
{
    {
        size_t i = 0;
        FILE *pFile = NULL;
        const char *filename = ";
        pFile = fopen(filename, "w+");
        if (pFile == NULL)
        {
            exit(1);
        }
        for (i = 0; i < (size_t)count; i++)
        {
            if (strlen(SENTENCE) != fwrite(SENTENCE, sizeof(char), strlen(SENTENCE), pFile))
            {
                exit(1);
            }
        }
        if (pFile)
        {
            fclose(pFile);
        }
    }
}
}


namespace GenNS1
{



void func4()
{
    int count;
    count = -1;
    GenClass1 * var1 = new GenClass1(count);
    delete var1;
}

} 



using namespace GenNS1; 

int main(int argc, char * argv[])
{
    srand( (unsigned)time(NULL) );

    printLine("Calling ...");
    func4();
    printLine("Finished");
    return 0;
}

