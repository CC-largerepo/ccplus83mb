#include "std_testcase.h"

#ifdef _WIN32
#include <windows.h>
#define SLEEP Sleep
#else
#include <unistd.h>
#define SLEEP usleep
#endif

static int staticReturnsTrue()
{
    return 1;
}

static int staticReturnsFalse()
{
    return 0;
}



static void func4()
{
    int count;
    count = -1;
    if(staticReturnsTrue())
    {
        count = RAND32();
    }
    if(staticReturnsFalse())
    {
        printLine("Benign, fixed string");
    }
    else
    {
        if (count > 0 && count <= 2000)
        {
            SLEEP(count);
            printLine("Sleep time OK");
        }
        else
        {
            printLine("Sleep time too long");
        }
    }
}

static void func5()
{
    int count;
    count = -1;
    if(staticReturnsTrue())
    {
        count = RAND32();
    }
    if(staticReturnsTrue())
    {
        if (count > 0 && count <= 2000)
        {
            SLEEP(count);
            printLine("Sleep time OK");
        }
        else
        {
            printLine("Sleep time too long");
        }
    }
}

static void func6()
{
    int count;
    count = -1;
    if(staticReturnsFalse())
    {
        printLine("Benign, fixed string");
    }
    else
    {
        count = 20;
    }
    if(staticReturnsTrue())
    {
        SLEEP(count);
        printLine("Sleep time possibly too long");
    }
}

static void func7()
{
    int count;
    count = -1;
    if(staticReturnsTrue())
    {
        count = 20;
    }
    if(staticReturnsTrue())
    {
        SLEEP(count);
        printLine("Sleep time possibly too long");
    }
}

void func8()
{
    func4();
    func5();
    func6();
    func7();
}



int main(int argc, char * argv[])
{
    srand( (unsigned)time(NULL) );

    printLine("Calling ...");
    func8();
    printLine("Finished");
    return 0;
}

