

#include <wchar.h>



void func5(int64_t * data);

void func2(int64_t * data)
{
    func5(data);
}

void func6(int64_t * data);

void func3(int64_t * data)
{
    func6(data);
}



#include <wchar.h>



void func8(int64_t * data);

void func5(int64_t * data)
{
    func8(data);
}

void func9(int64_t * data);

void func6(int64_t * data)
{
    func9(data);
}



#include <wchar.h>



void func11(int64_t * data);

void func8(int64_t * data)
{
    func11(data);
}

void func12(int64_t * data);

void func9(int64_t * data)
{
    func12(data);
}



#include <wchar.h>



void func11(int64_t * data)
{
    ; 
}

void func12(int64_t * data)
{
    free(data);
}



#include <wchar.h>



void func2(int64_t * data);

static void func14()
{
    int64_t * data;
    data = NULL;
    data = (int64_t *)ALLOCA(100*sizeof(int64_t));
    data[0] = 5LL;
    printLongLongLine(data[0]);
    func2(data);
}

void func3(int64_t * data);

static void func15()
{
    int64_t * data;
    data = NULL;
    data = (int64_t *)malloc(100*sizeof(int64_t));
    data[0] = 5LL;
    printLongLongLine(data[0]);
    func3(data);
}

void func16()
{
    func14();
    func15();
}



int main(int argc, char * argv[])
{
    srand( (unsigned)time(NULL) );

    printLine("Calling ...");
    func16();
    printLine("Finished");
    return 0;
}

