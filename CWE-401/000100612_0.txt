#include <list>

#include <wchar.h>

using namespace std;

namespace GenNS1
{



void func2(list<twoIntsStruct *> dataList)
{
    twoIntsStruct * data = dataList.back();
    ; 
}

void func3(list<twoIntsStruct *> dataList)
{
    twoIntsStruct * data = dataList.back();
    free(data);
}

} #include <list>

#include <wchar.h>

using namespace std;

namespace GenNS1
{



void func2(list<twoIntsStruct *> dataList);

static void func5()
{
    twoIntsStruct * data;
    list<twoIntsStruct *> dataList;
    data = NULL;
    data = (twoIntsStruct *)ALLOCA(100*sizeof(twoIntsStruct));
    data[0].intOne = 0;
    data[0].intTwo = 0;
    printStructLine(&data[0]);
    dataList.push_back(data);
    dataList.push_back(data);
    dataList.push_back(data);
    func2(dataList);
}

void func3(list<twoIntsStruct *> dataList);

static void func6()
{
    twoIntsStruct * data;
    list<twoIntsStruct *> dataList;
    data = NULL;
    data = (twoIntsStruct *)calloc(100, sizeof(twoIntsStruct));
    data[0].intOne = 0;
    data[0].intTwo = 0;
    printStructLine(&data[0]);
    dataList.push_back(data);
    dataList.push_back(data);
    dataList.push_back(data);
    func3(dataList);
}

void func7()
{
    func5();
    func6();
}

} 



using namespace GenNS1; 

int main(int argc, char * argv[])
{
    srand( (unsigned)time(NULL) );

    printLine("Calling ...");
    func7();
    printLine("Finished");
    return 0;
}

