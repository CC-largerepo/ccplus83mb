

#include <wchar.h>

namespace GenNS1
{

class GenClass1
{
public:
    virtual void action(struct _twoIntsStruct * data) const = 0;
};



class GenClass3 : public GenClass1
{
public:
    void action(struct _twoIntsStruct * data) const;
};

class GenClass4 : public GenClass1
{
public:
    void action(struct _twoIntsStruct * data) const;
};

}



namespace GenNS1
{

void GenClass4::action(struct _twoIntsStruct * data) const
{
    free(data);
}

}




namespace GenNS1
{

void GenClass3::action(struct _twoIntsStruct * data) const
{
    ; 
}

}


namespace GenNS1
{



static void func2()
{
    struct _twoIntsStruct * data;
    data = NULL;
    data = (struct _twoIntsStruct *)ALLOCA(100*sizeof(struct _twoIntsStruct));
    data[0].intOne = 0;
    data[0].intTwo = 0;
    printStructLine((twoIntsStruct *)&data[0]);
    const GenClass1& baseObject = GenClass3();
    baseObject.action(data);
}

static void func3()
{
    struct _twoIntsStruct * data;
    data = NULL;
    data = (struct _twoIntsStruct *)realloc(data, 100*sizeof(struct _twoIntsStruct));
    if (data == NULL) {exit(-1);}
    data[0].intOne = 0;
    data[0].intTwo = 0;
    printStructLine((twoIntsStruct *)&data[0]);
    const GenClass1& baseObject = GenClass4();
    baseObject.action(data);
}

void func4()
{
    func2();
    func3();
}

} 



using namespace GenNS1; 

int main(int argc, char * argv[])
{
    srand( (unsigned)time(NULL) );

    printLine("Calling ...");
    func4();
    printLine("Finished");
    return 0;
}

