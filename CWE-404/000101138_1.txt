

#ifdef _WIN32
#define OPEN _open
#define CLOSE _close
#else
#include <unistd.h>
#define OPEN open
#define CLOSE close
#endif

#include <windows.h>

typedef struct var1
{
    int structFirst;
} var2;



void func1(var2 myStruct)
{
    int data = myStruct.structFirst;
    if (data != -1)
    {
        CloseHandle((HANDLE)data);
    }
}



#ifdef _WIN32
#define OPEN _open
#define CLOSE _close
#else
#include <unistd.h>
#define OPEN open
#define CLOSE close
#endif

#include <windows.h>

typedef struct var1
{
    int structFirst;
} var2;



void func1(var2 myStruct);

void func3()
{
    int data;
    var2 myStruct;
    data = -1;
    data = OPEN(", O_RDWR|O_CREAT, S_IREAD|S_IWRITE);
    myStruct.structFirst = data;
    func1(myStruct);
}



int main(int argc, char * argv[])
{
    srand( (unsigned)time(NULL) );

    printLine("Calling ...");
    func3();
    printLine("Finished");
    return 0;
}

