#include <map>

#ifdef _WIN32
#define OPEN _open
#define CLOSE _close
#else
#include <unistd.h>
#define OPEN open
#define CLOSE close
#endif

#include <windows.h>

using namespace std;

namespace GenNS1
{



void func2(map<int, int> dataMap)
{
    int data = dataMap[2];
    if (data != -1)
    {
        CLOSE(data);
    }
}

} #include <map>

#ifdef _WIN32
#define OPEN _open
#define CLOSE _close
#else
#include <unistd.h>
#define OPEN open
#define CLOSE close
#endif

using namespace std;

namespace GenNS1
{



void func2(map<int, int> dataMap);

static void func4()
{
    int data;
    map<int, int> dataMap;
    data = -1;
    data = OPEN(", O_RDWR|O_CREAT, S_IREAD|S_IWRITE);
    dataMap[0] = data;
    dataMap[1] = data;
    dataMap[2] = data;
    func2(dataMap);
}

void func5()
{
    func4();
}

} 



using namespace GenNS1; 

int main(int argc, char * argv[])
{
    srand( (unsigned)time(NULL) );

    printLine("Calling ...");
    func5();
    printLine("Finished");
    return 0;
}

