

#ifdef _WIN32
#define OPEN _open
#define CLOSE _close
#else
#include <unistd.h>
#define OPEN open
#define CLOSE close
#endif

namespace GenNS1
{



class GenClass2
{
public:
    GenClass2(int dataCopy);
    ~GenClass2();

private:
    int data;
};

}



#include <windows.h>

namespace GenNS1
{
GenClass2::GenClass2(int dataCopy)
{
    data = dataCopy;
    data = OPEN(", O_RDWR|O_CREAT, S_IREAD|S_IWRITE);
}

GenClass2::~GenClass2()
{
    if (data != -1)
    {
        CLOSE(data);
    }
}
}


namespace GenNS1
{



static void func4()
{
    int data;
    data = -1;
    GenClass2 * var2 = new GenClass2(data);
    delete var2;
}

void func5()
{
    func4();
}

} 



using namespace GenNS1; 

int main(int argc, char * argv[])
{
    srand( (unsigned)time(NULL) );

    printLine("Calling ...");
    func5();
    printLine("Finished");
    return 0;
}

