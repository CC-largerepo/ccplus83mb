

#include <wchar.h>
#ifdef _WIN32
#define var1 "cmd.exe /c dir"

#define var2 "c:\\windows\\system32\\cmd.exe /c dir"
#else 
#define var1 "ls -la"
#define var2 "/usr/bin/ls -la"
#endif 

namespace GenNS1
{

class GenClass1
{
public:
    virtual void action(char * data) const = 0;
};



class GenClass2 : public GenClass1
{
public:
    void action(char * data) const;
};

}



#ifdef _WIN32
#define SYSTEM system
#else 
#define SYSTEM system
#endif

namespace GenNS1
{

void GenClass2::action(char * data) const
{
    if (SYSTEM(data) <= 0)
    {
        printLine("command execution failed!");
        exit(1);
    }
}

}


namespace GenNS1
{



void func1()
{
    char * data;
    char dataBuffer[100] = "";
    data = dataBuffer;
    strcpy(data, var1);
    const GenClass1& baseObject = GenClass2();
    baseObject.action(data);
}

} 



using namespace GenNS1; 

int main(int argc, char * argv[])
{
    srand( (unsigned)time(NULL) );

    printLine("Calling ...");
    func1();
    printLine("Finished");
    return 0;
}

