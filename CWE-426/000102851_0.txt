#include <map>

#include <wchar.h>
#ifdef _WIN32
#define var1 L"cmd.exe /c dir"

#define var2 L"c:\\windows\\system32\\cmd.exe /c dir"
#else 
#define var1 L"ls -la"
#define var2 L"/usr/bin/ls -la"
#endif 

#ifdef _WIN32
#define SYSTEM _wsystem
#else 
#define SYSTEM system
#endif

using namespace std;

namespace GenNS1
{



void func2(map<int, wchar_t *> dataMap)
{
    wchar_t * data = dataMap[2];
    if (SYSTEM(data) <= 0)
    {
        printLine("command execution failed!");
        exit(1);
    }
}

} #include <map>

#include <wchar.h>
#ifdef _WIN32
#define var1 L"cmd.exe /c dir"

#define var2 L"c:\\windows\\system32\\cmd.exe /c dir"
#else 
#define var1 L"ls -la"
#define var2 L"/usr/bin/ls -la"
#endif 

using namespace std;

namespace GenNS1
{



void func2(map<int, wchar_t *> dataMap);

static void func4()
{
    wchar_t * data;
    map<int, wchar_t *> dataMap;
    wchar_t dataBuffer[100] = L"";
    data = dataBuffer;
    wcscpy(data, var2);
    dataMap[0] = data;
    dataMap[1] = data;
    dataMap[2] = data;
    func2(dataMap);
}

void func5()
{
    func4();
}

} 



using namespace GenNS1; 

int main(int argc, char * argv[])
{
    srand( (unsigned)time(NULL) );

    printLine("Calling ...");
    func5();
    printLine("Finished");
    return 0;
}

