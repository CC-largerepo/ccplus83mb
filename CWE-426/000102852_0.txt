

#include <wchar.h>
#ifdef _WIN32
#define var1 L"cmd.exe /c dir"

#define var2 L"c:\\windows\\system32\\cmd.exe /c dir"
#else 
#define var1 L"ls -la"
#define var2 L"/usr/bin/ls -la"
#endif 

namespace GenNS1
{

class GenClass1
{
public:
    virtual void action(wchar_t * data) const = 0;
};



class GenClass3 : public GenClass1
{
public:
    void action(wchar_t * data) const;
};

}



#ifdef _WIN32
#define SYSTEM _wsystem
#else 
#define SYSTEM system
#endif

namespace GenNS1
{

void GenClass3::action(wchar_t * data) const
{
    if (SYSTEM(data) <= 0)
    {
        printLine("command execution failed!");
        exit(1);
    }
}

}


namespace GenNS1
{



static void func2()
{
    wchar_t * data;
    wchar_t dataBuffer[100] = L"";
    data = dataBuffer;
    wcscpy(data, var2);
    const GenClass1& baseObject = GenClass3();
    baseObject.action(data);
}

void func3()
{
    func2();
}

} 



using namespace GenNS1; 

int main(int argc, char * argv[])
{
    srand( (unsigned)time(NULL) );

    printLine("Calling ...");
    func3();
    printLine("Finished");
    return 0;
}

