

#include <wchar.h>

namespace GenNS1
{

class GenClass1
{
public:
    virtual void action(TwoIntsClass * data) const = 0;
};



class GenClass3 : public GenClass1
{
public:
    void action(TwoIntsClass * data) const;
};

}



namespace GenNS1
{

void GenClass3::action(TwoIntsClass * data) const
{
    printIntLine(data[0].intOne);
    delete [] data;
}

}


namespace GenNS1
{



static void func2()
{
    TwoIntsClass * data;
    data = NULL; 
    {
        TwoIntsClass * dataBuffer = new TwoIntsClass[100];
        {
            size_t i;
            for (i = 0; i < 100; i++)
            {
                dataBuffer[i].intOne = 1;
                dataBuffer[i].intTwo = 1;
            }
        }
        data = dataBuffer;
    }
    const GenClass1& baseObject = GenClass3();
    baseObject.action(data);
}

void func3()
{
    func2();
}

} 



using namespace GenNS1; 

int main(int argc, char * argv[])
{
    srand( (unsigned)time(NULL) );

    printLine("Calling ...");
    func3();
    printLine("Finished");
    return 0;
}

