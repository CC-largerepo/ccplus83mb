

#define MAX_LOOP 10000

#ifndef _WIN32
#include <wchar.h>
#endif



void func4(wchar_t * data);

void func1(wchar_t * data)
{
    func4(data);
}



#define MAX_LOOP 10000

#ifndef _WIN32
#include <wchar.h>
#endif



void func7(wchar_t * data);

void func4(wchar_t * data)
{
    func7(data);
}



#define MAX_LOOP 10000

#ifndef _WIN32
#include <wchar.h>
#endif



void func10(wchar_t * data);

void func7(wchar_t * data)
{
    func10(data);
}



#define MAX_LOOP 10000

#ifndef _WIN32
#include <wchar.h>
#endif



void func10(wchar_t * data)
{
    {
        int i, n, intVariable;
        if (swscanf(data, L"%d", &n) == 1)
        {
            intVariable = 0;
            for (i = 0; i < n; i++)
            {
                intVariable++; 
            }
            printIntLine(intVariable);
        }
    }
}



#define MAX_LOOP 10000

#ifndef _WIN32
#include <wchar.h>
#endif



void func1(wchar_t * data);

void func13()
{
    wchar_t * data;
    wchar_t dataBuffer[100] = L"";
    data = dataBuffer;
    {
        size_t dataLen = wcslen(data);
        if (100-dataLen > 1)
        {
            if (fgetws(data+dataLen, (int)(100-dataLen), stdin) != NULL)
            {
                dataLen = wcslen(data);
                if (dataLen > 0 && data[dataLen-1] == L'\n')
                {
                    data[dataLen-1] = L'\0';
                }
            }
            else
            {
                printLine("fgetws() failed");
                data[dataLen] = L'\0';
            }
        }
    }
    func1(data);
}



int main(int argc, char * argv[])
{
    srand( (unsigned)time(NULL) );

    printLine("Calling ...");
    func13();
    printLine("Finished");
    return 0;
}

