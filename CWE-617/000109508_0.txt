

#include <assert.h>

#define ASSERT_VALUE 5

#define CHAR_ARRAY_SIZE (3 * sizeof(data) + 2)



void func4(int data);

void func2(int data)
{
    func4(data);
}



#include <assert.h>

#define ASSERT_VALUE 5

#define CHAR_ARRAY_SIZE (3 * sizeof(data) + 2)



void func6(int data);

void func4(int data)
{
    func6(data);
}



#include <assert.h>

#define ASSERT_VALUE 5

#define CHAR_ARRAY_SIZE (3 * sizeof(data) + 2)



void func8(int data);

void func6(int data)
{
    func8(data);
}



#include <assert.h>

#define ASSERT_VALUE 5

#define CHAR_ARRAY_SIZE (3 * sizeof(data) + 2)



void func8(int data)
{
    assert(data > ASSERT_VALUE);
}



#include <assert.h>

#define ASSERT_VALUE 5

#define CHAR_ARRAY_SIZE (3 * sizeof(data) + 2)



void func2(int data);

static void func10()
{
    int data;
    data = -1;
    data = ASSERT_VALUE+1;
    func2(data);
}

void func11()
{
    func10();
}



int main(int argc, char * argv[])
{
    srand( (unsigned)time(NULL) );

    printLine("Calling ...");
    func11();
    printLine("Finished");
    return 0;
}

