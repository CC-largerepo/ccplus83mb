#include <iostream>

using namespace std;

namespace GenNS1
{

} 



using namespace GenNS1; 

int main(int argc, char * argv[])
{
    srand( (unsigned)time(NULL) );
    return 0;
}

#include <iostream>

using namespace std;

namespace GenNS1
{



class GenClass2 {
    public:
        GenClass2()
        {
            initialize();
        }

        void initialize()
        {
            initialized = false; 

            if (!initialized)
            {
                printLine("Initializing...");
                initialized = true;
            }
        }

        bool isInitialized()
        {
            return initialized;
        }

    private:
        bool initialized;
};

static void func7()
{
    GenClass2 var2 = GenClass2();

    cout << "Initialized? ";
    if (var2.isInitialized())
    {
        cout << "true";
    }
    else
    {
        cout << "false";
    }
    cout << endl;
}

void func8()
{
    func7();
}

} 



using namespace GenNS1; 

int main(int argc, char * argv[])
{
    srand( (unsigned)time(NULL) );

    printLine("Calling ...");
    func8();
    printLine("Finished");
    return 0;
}

