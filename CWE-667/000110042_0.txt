#include "std_testcase.h"

#include "std_thread.h"

static int staticReturnsTrue()
{
    return 1;
}

static int staticReturnsFalse()
{
    return 0;
}



static void func4()
{
    if(staticReturnsFalse())
    {
        printLine("Benign, fixed string");
    }
    else
    {
        {
            static stdThreadLock var2 = NULL;
            printLine("Creating lock...");
            if (!stdThreadLockCreate(&var2))
            {
                printLine("Could not create lock");
                exit(1);
            }
            printLine("Acquiring lock...");
            stdThreadLockAcquire(var2);
            printLine("Releasing lock...");
            stdThreadLockRelease(var2);
            printLine("Destroying lock...");
            stdThreadLockDestroy(var2);
        }
    }
}

static void func5()
{
    if(staticReturnsTrue())
    {
        {
            static stdThreadLock var2 = NULL;
            printLine("Creating lock...");
            if (!stdThreadLockCreate(&var2))
            {
                printLine("Could not create lock");
                exit(1);
            }
            printLine("Acquiring lock...");
            stdThreadLockAcquire(var2);
            printLine("Releasing lock...");
            stdThreadLockRelease(var2);
            printLine("Destroying lock...");
            stdThreadLockDestroy(var2);
        }
    }
}

void func6()
{
    func4();
    func5();
}



int main(int argc, char * argv[])
{
    srand( (unsigned)time(NULL) );

    printLine("Calling ...");
    func6();
    printLine("Finished");
    return 0;
}

