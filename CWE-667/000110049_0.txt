#include "std_testcase.h"

#include "std_thread.h"



static void func3()
{
    switch(5)
    {
    case 6:
        printLine("Benign, fixed string");
        break;
    default:
    {
        static stdThreadLock var2 = NULL;
        printLine("Creating lock...");
        if (!stdThreadLockCreate(&var2))
        {
            printLine("Could not create lock");
            exit(1);
        }
        printLine("Acquiring lock...");
        stdThreadLockAcquire(var2);
        printLine("Releasing lock...");
        stdThreadLockRelease(var2);
        printLine("Destroying lock...");
        stdThreadLockDestroy(var2);
    }
    break;
    }
}

static void func5()
{
    switch(6)
    {
    case 6:
    {
        static stdThreadLock var2 = NULL;
        printLine("Creating lock...");
        if (!stdThreadLockCreate(&var2))
        {
            printLine("Could not create lock");
            exit(1);
        }
        printLine("Acquiring lock...");
        stdThreadLockAcquire(var2);
        printLine("Releasing lock...");
        stdThreadLockRelease(var2);
        printLine("Destroying lock...");
        stdThreadLockDestroy(var2);
    }
    break;
    default:
        printLine("Benign, fixed string");
        break;
    }
}

void func7()
{
    func3();
    func5();
}



int main(int argc, char * argv[])
{
    srand( (unsigned)time(NULL) );

    printLine("Calling ...");
    func7();
    printLine("Finished");
    return 0;
}

