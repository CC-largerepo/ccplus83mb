

#include <wchar.h>
#include <list>
#include <iostream>

using namespace std;

namespace GenNS1
{

class GenClass1
{
public:
    virtual void action(list<int>  data) const = 0;
};



class GenClass3 : public GenClass1
{
public:
    void action(list<int>  data) const;
};

class GenClass4 : public GenClass1
{
public:
    void action(list<int>  data) const;
};

}



namespace GenNS1
{

void GenClass4::action(list<int>  data) const
{
    {
        list<int> ::iterator i;
        cout << "The list contains: ";
        for( i = data.begin(); i != data.end(); i++)
        {
            cout << " " << *i;
        }
        cout << endl;
    }
}

}




namespace GenNS1
{

void GenClass3::action(list<int>  data) const
{
    {
        list<int> ::iterator i;
        cout << "The list contains: ";
        for( i = data.begin(); i != data.end(); i++)
        {
            if (!*i)
            {
                data.clear();
            }
            cout << " " << *i;
        }
        cout << endl;
    }
}

}


namespace GenNS1
{



static void func2()
{
    list<int>  data;
    data.push_back(100);
    data.push_back(200);
    const GenClass1& baseObject = GenClass3();
    baseObject.action(data);
}

static void func3()
{
    list<int>  data;
    data.push_back(100);
    data.push_back(0);
    const GenClass1& baseObject = GenClass4();
    baseObject.action(data);
}

void func4()
{
    func2();
    func3();
}

} 



using namespace GenNS1; 

int main(int argc, char * argv[])
{
    srand( (unsigned)time(NULL) );

    printLine("Calling ...");
    func4();
    printLine("Finished");
    return 0;
}

