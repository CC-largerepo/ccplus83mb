#include <vector>

#ifdef _WIN32
# define OPEN _open
# define CLOSE _close
#else
#include <unistd.h>
# define OPEN open
# define CLOSE close
#endif

using namespace std;

namespace GenNS1
{



void func1(vector<int> dataVector)
{
    int data = dataVector[2];
    CLOSE(data);
}

} #include <vector>

#ifdef _WIN32
# define OPEN _open
# define CLOSE _close
#else
#include <unistd.h>
# define OPEN open
# define CLOSE close
#endif

using namespace std;

namespace GenNS1
{



void func1(vector<int> dataVector);

void func4()
{
    int data;
    vector<int> dataVector;
    data = -1; 
    data = OPEN(", O_RDWR|O_CREAT, S_IREAD|S_IWRITE);
    CLOSE(data);
    dataVector.insert(dataVector.end(), 1, data);
    dataVector.insert(dataVector.end(), 1, data);
    dataVector.insert(dataVector.end(), 1, data);
    func1(dataVector);
}

} 



using namespace GenNS1; 

int main(int argc, char * argv[])
{
    srand( (unsigned)time(NULL) );

    printLine("Calling ...");
    func4();
    printLine("Finished");
    return 0;
}

