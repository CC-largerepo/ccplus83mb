#include <list>

#include <windows.h>

using namespace std;

namespace GenNS1
{



void func2(list<HANDLE> dataList)
{
    HANDLE data = dataList.back();
    CloseHandle(data);
}

void func3(list<HANDLE> dataList)
{
    HANDLE data = dataList.back();
    ; 
}

} #include <list>

#include <windows.h>

using namespace std;

namespace GenNS1
{



void func2(list<HANDLE> dataList);

static void func5()
{
    HANDLE data;
    list<HANDLE> dataList;
    data = INVALID_HANDLE_VALUE; 
    data = CreateFile(",
                      (GENERIC_WRITE|GENERIC_READ),
                      0,
                      NULL,
                      OPEN_ALWAYS,
                      FILE_ATTRIBUTE_NORMAL,
                      NULL);
    dataList.push_back(data);
    dataList.push_back(data);
    dataList.push_back(data);
    func2(dataList);
}

void func3(list<HANDLE> dataList);

static void func6()
{
    HANDLE data;
    list<HANDLE> dataList;
    data = INVALID_HANDLE_VALUE; 
    data = CreateFile(",
                      (GENERIC_WRITE|GENERIC_READ),
                      0,
                      NULL,
                      OPEN_ALWAYS,
                      FILE_ATTRIBUTE_NORMAL,
                      NULL);
    CloseHandle(data);
    dataList.push_back(data);
    dataList.push_back(data);
    dataList.push_back(data);
    func3(dataList);
}

void func7()
{
    func5();
    func6();
}

} 



using namespace GenNS1; 

int main(int argc, char * argv[])
{
    srand( (unsigned)time(NULL) );

    printLine("Calling ...");
    func7();
    printLine("Finished");
    return 0;
}

