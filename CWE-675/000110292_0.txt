

#include <windows.h>

namespace GenNS1
{



class GenClass2
{
public:
    GenClass2(HANDLE dataCopy);
    ~GenClass2();

private:
    HANDLE data;
};

class GenClass3
{
public:
    GenClass3(HANDLE dataCopy);
    ~GenClass3();

private:
    HANDLE data;
};

}



namespace GenNS1
{
GenClass3::GenClass3(HANDLE dataCopy)
{
    data = dataCopy;
    data = CreateFile(",
                      (GENERIC_WRITE|GENERIC_READ),
                      0,
                      NULL,
                      OPEN_ALWAYS,
                      FILE_ATTRIBUTE_NORMAL,
                      NULL);
    CloseHandle(data);
}

GenClass3::~GenClass3()
{
    ; 
}
}




namespace GenNS1
{
GenClass2::GenClass2(HANDLE dataCopy)
{
    data = dataCopy;
    data = CreateFile(",
                      (GENERIC_WRITE|GENERIC_READ),
                      0,
                      NULL,
                      OPEN_ALWAYS,
                      FILE_ATTRIBUTE_NORMAL,
                      NULL);
}

GenClass2::~GenClass2()
{
    CloseHandle(data);
}
}


namespace GenNS1
{



static void func5()
{
    HANDLE data;
    data = INVALID_HANDLE_VALUE; 
    GenClass2 var2(data);
}

static void func6()
{
    HANDLE data;
    data = INVALID_HANDLE_VALUE; 
    GenClass3 var3(data);
}

void func7()
{
    func5();
    func6();
}

} 



using namespace GenNS1; 

int main(int argc, char * argv[])
{
    srand( (unsigned)time(NULL) );

    printLine("Calling ...");
    func7();
    printLine("Finished");
    return 0;
}

