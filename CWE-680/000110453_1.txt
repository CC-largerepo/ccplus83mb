

namespace GenNS1
{

class GenClass1
{
public:
    virtual void action(int data) = 0;
};



class GenClass2 : public GenClass1
{
public:
    void action(int data);
};

}



namespace GenNS1
{

void GenClass2::action(int data)
{
    {
        size_t i;
        int *intPointer;
        intPointer = (int*)malloc(data * sizeof(int));
        for (i = 0; i < (size_t)data; i++)
        {
            intPointer[i] = 0; 
        }
        printIntLine(intPointer[0]);
        free(intPointer);
    }
}

}


namespace GenNS1
{



void func2()
{
    int data;
    data = -1;
    data = INT_MAX / 2 + 2; 
    GenClass1* baseObject = new GenClass2;
    baseObject->action(data);
    delete baseObject;
}

} 



using namespace GenNS1; 

int main(int argc, char * argv[])
{
    srand( (unsigned)time(NULL) );

    printLine("Calling ...");
    func2();
    printLine("Finished");
    return 0;
}

