

#define CHAR_ARRAY_SIZE (3 * sizeof(data) + 2)

namespace GenNS1
{



extern int var2;
extern int var3;

int func2(int data)
{
    if(var2)
    {
        printLine("Benign, fixed string");
    }
    else
    {
        data = 20;
    }
    return data;
}

int func3(int data)
{
    if(var3)
    {
        data = 20;
    }
    return data;
}

} 

namespace GenNS1
{



int var2 = 0;
int var3 = 0;

int func2(int data);

static void func5()
{
    int data;
    data = -1;
    var2 = 0; 
    data = func2(data);
    {
        size_t dataBytes,i;
        int *intPointer;
        dataBytes = data * sizeof(int); 
        intPointer = (int*)new char[dataBytes];
        for (i = 0; i < (size_t)data; i++)
        {
            intPointer[i] = 0; 
        }
        printIntLine(intPointer[0]);
        delete [] intPointer;
    }
    ;
}

int func3(int data);

static void func6()
{
    int data;
    data = -1;
    var3 = 1; 
    data = func3(data);
    {
        size_t dataBytes,i;
        int *intPointer;
        dataBytes = data * sizeof(int); 
        intPointer = (int*)new char[dataBytes];
        for (i = 0; i < (size_t)data; i++)
        {
            intPointer[i] = 0; 
        }
        printIntLine(intPointer[0]);
        delete [] intPointer;
    }
    ;
}

void func7()
{
    func5();
    func6();
}

} 



using namespace GenNS1; 

int main(int argc, char * argv[])
{
    srand( (unsigned)time(NULL) );

    printLine("Calling ...");
    func7();
    printLine("Finished");
    return 0;
}

