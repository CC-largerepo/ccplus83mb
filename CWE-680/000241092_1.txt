#include <vector>

using namespace std;

namespace GenNS1
{



void func1(vector<int> dataVector)
{
    int data = dataVector[2];
    {
        size_t i;
        int *intPointer;
        intPointer = (int*)malloc(data * sizeof(int));
        if (intPointer == NULL) {exit(-1);}
        for (i = 0; i < (size_t)data; i++)
        {
            intPointer[i] = 0; 
        }
        printIntLine(intPointer[0]);
        free(intPointer);
    }
}

} #include <vector>

using namespace std;

namespace GenNS1
{



void func1(vector<int> dataVector);

void func3()
{
    int data;
    vector<int> dataVector;
    data = -1;
    data = RAND32();
    dataVector.insert(dataVector.end(), 1, data);
    dataVector.insert(dataVector.end(), 1, data);
    dataVector.insert(dataVector.end(), 1, data);
    func1(dataVector);
}

} 



using namespace GenNS1; 

int main(int argc, char * argv[])
{
    srand( (unsigned)time(NULL) );

    printLine("Calling ...");
    func3();
    printLine("Finished");
    return 0;
}

