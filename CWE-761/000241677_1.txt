

#include <wchar.h>

namespace GenNS1
{

class GenClass1
{
public:
    virtual void action(wchar_t * data) const = 0;
};



class GenClass2 : public GenClass1
{
public:
    void action(wchar_t * data) const;
};

}



#define SEARCH_CHAR L'S'

namespace GenNS1
{

void GenClass2::action(wchar_t * data) const
{
    for (; *data != L'\0'; data++)
    {
        if (*data == SEARCH_CHAR)
        {
            printLine("We have a match!");
            break;
        }
    }
    free(data);
}

}


#define var1 L"Fixed String" 

#define SEARCH_CHAR L'S'

namespace GenNS1
{



void func1()
{
    wchar_t * data;
    data = (wchar_t *)malloc(100*sizeof(wchar_t));
    if (data == NULL) {exit(-1);}
    data[0] = L'\0';
    wcscpy(data, var1);
    const GenClass1& baseObject = GenClass2();
    baseObject.action(data);
}

} 



using namespace GenNS1; 

int main(int argc, char * argv[])
{
    srand( (unsigned)time(NULL) );

    printLine("Calling ...");
    func1();
    printLine("Finished");
    return 0;
}

