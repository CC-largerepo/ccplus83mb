

#include <wchar.h>

namespace GenNS1
{



class GenClass1
{
public:
    GenClass1(wchar_t * dataCopy);
    ~GenClass1();

private:
    wchar_t * data;
};

}



#define var1 L"Fixed String" 

#define SEARCH_CHAR L'S'

namespace GenNS1
{
GenClass1::GenClass1(wchar_t * dataCopy)
{
    data = dataCopy;
    wcscpy(data, var1);
}

GenClass1::~GenClass1()
{
    for (; *data != L'\0'; data++)
    {
        if (*data == SEARCH_CHAR)
        {
            printLine("We have a match!");
            break;
        }
    }
    free(data);
}
}


namespace GenNS1
{



void func3()
{
    wchar_t * data;
    data = (wchar_t *)malloc(100*sizeof(wchar_t));
    if (data == NULL) {exit(-1);}
    data[0] = L'\0';
    GenClass1 * var2 = new GenClass1(data);
    delete var2;
}

} 



using namespace GenNS1; 

int main(int argc, char * argv[])
{
    srand( (unsigned)time(NULL) );

    printLine("Calling ...");
    func3();
    printLine("Finished");
    return 0;
}

