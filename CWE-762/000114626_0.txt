#include <vector>

using namespace std;

namespace GenNS1
{



void func2(vector<int *> dataVector)
{
    int * data = dataVector[2];
    delete data;
}

void func3(vector<int *> dataVector)
{
    int * data = dataVector[2];
    free(data);
}

} #include <vector>

using namespace std;

namespace GenNS1
{



void func2(vector<int *> dataVector);

static void func5()
{
    int * data;
    vector<int *> dataVector;
    data = NULL;
    data = new int;
    dataVector.insert(dataVector.end(), 1, data);
    dataVector.insert(dataVector.end(), 1, data);
    dataVector.insert(dataVector.end(), 1, data);
    func2(dataVector);
}

void func3(vector<int *> dataVector);

static void func6()
{
    int * data;
    vector<int *> dataVector;
    data = NULL;
    data = (int *)malloc(100*sizeof(int));
    dataVector.insert(dataVector.end(), 1, data);
    dataVector.insert(dataVector.end(), 1, data);
    dataVector.insert(dataVector.end(), 1, data);
    func3(dataVector);
}

void func7()
{
    func5();
    func6();
}

} 



using namespace GenNS1; 

int main(int argc, char * argv[])
{
    srand( (unsigned)time(NULL) );

    printLine("Calling ...");
    func7();
    printLine("Finished");
    return 0;
}

