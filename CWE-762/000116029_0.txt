

namespace GenNS1
{



class GenClass2
{
public:
    GenClass2(long * dataCopy);
    ~GenClass2();

private:
    long * data;
};

class GenClass3
{
public:
    GenClass3(long * dataCopy);
    ~GenClass3();

private:
    long * data;
};

}



namespace GenNS1
{
GenClass3::GenClass3(long * dataCopy)
{
    data = dataCopy;
    data = new long;
}

GenClass3::~GenClass3()
{
    delete data;
}
}




namespace GenNS1
{
GenClass2::GenClass2(long * dataCopy)
{
    data = dataCopy;
    data = new long[100];
}

GenClass2::~GenClass2()
{
    delete [] data;
}
}


namespace GenNS1
{



static void func5()
{
    long * data;
    data = NULL;
    GenClass2 * var2 = new GenClass2(data);
    delete var2;
}

static void func6()
{
    long * data;
    data = NULL;
    GenClass3 * var3 = new GenClass3(data);
    delete var3;
}

void func7()
{
    func5();
    func6();
}

} 



using namespace GenNS1; 

int main(int argc, char * argv[])
{
    srand( (unsigned)time(NULL) );

    printLine("Calling ...");
    func7();
    printLine("Finished");
    return 0;
}

