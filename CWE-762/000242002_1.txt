

namespace GenNS1
{

class GenClass1
{
public:
    virtual void action(int64_t * data) = 0;
};



class GenClass2 : public GenClass1
{
public:
    void action(int64_t * data);
};

}



namespace GenNS1
{

void GenClass2::action(int64_t * data)
{
    delete [] data;
}

}


namespace GenNS1
{



void func2()
{
    int64_t * data;
    data = NULL;
    data = NULL;
    data = (int64_t *)realloc(data, 100*sizeof(int64_t));
    if (data == NULL) {exit(-1);}
    GenClass1* baseObject = new GenClass2;
    baseObject->action(data);
    delete baseObject;
}

} 



using namespace GenNS1; 

int main(int argc, char * argv[])
{
    srand( (unsigned)time(NULL) );

    printLine("Calling ...");
    func2();
    printLine("Finished");
    return 0;
}

