

namespace GenNS1
{

class GenClass1
{
public:
    virtual void action(wchar_t * data) = 0;
};



class GenClass3 : public GenClass1
{
public:
    void action(wchar_t * data);
};

class GenClass4 : public GenClass1
{
public:
    void action(wchar_t * data);
};

}



namespace GenNS1
{

void GenClass4::action(wchar_t * data)
{
    free(data);
}

}




namespace GenNS1
{

void GenClass3::action(wchar_t * data)
{
    delete data;
}

}


namespace GenNS1
{



static void func3()
{
    wchar_t * data;
    data = NULL;
    data = new wchar_t;
    GenClass1* baseObject = new GenClass3;
    baseObject->action(data);
    delete baseObject;
}

static void func4()
{
    wchar_t * data;
    data = NULL;
    data = (wchar_t *)calloc(100, sizeof(wchar_t));
    if (data == NULL) {exit(-1);}
    GenClass1* baseObject = new GenClass4;
    baseObject->action(data);
    delete baseObject;
}

void func5()
{
    func3();
    func4();
}

} 



using namespace GenNS1; 

int main(int argc, char * argv[])
{
    srand( (unsigned)time(NULL) );

    printLine("Calling ...");
    func5();
    printLine("Finished");
    return 0;
}

